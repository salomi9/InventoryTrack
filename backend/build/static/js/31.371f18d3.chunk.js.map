{"version":3,"sources":["contant/custom.js","dashboard/BuManagement/BuAddForm.js"],"names":["WEB_URL","BasicForms","state","buName","buNameValid","buNameInvalid","engineer","tmValid","tmInvalid","BUID","undefined","props","location","res","userArr","fetchUser","fetch","then","response","json","data","Array","isArray","setState","catch","err","handleEnggChange","e","target","value","handleBuNameChange","match","handleSubmit","alert","params","BUName","BURPID","dataRequest","message","show","error","console","log","handleReset","this","URL","method","headers","body","JSON","stringify","status","history","push","optionItems1","map","key","_id","name","xs","action","encType","className","row","md","htmlFor","style","color","id","onChange","valid","invalid","placeholder","custom","type","size","margin","onClick","to","React","Component","withAlert"],"mappings":"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","file":"static/js/31.371f18d3.chunk.js","sourcesContent":["//For Development with react - local db\n// const WEB_URL = \"http://127.0.0.1:5050\" \n\n//For deployment with node - Compile EXE\nconst WEB_URL = \"\"\nexport default WEB_URL;","import React from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CForm,\n  CFormGroup,\n  CFormText,\n  CValidFeedback,\n  CInvalidFeedback,\n  CInput,\n  CLabel,\n  CSelect,\n  CRow\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport WEB_URL from '../../contant/custom';\nimport { withAlert } from 'react-alert';\nimport { Link } from 'react-router-dom';\n\nclass BasicForms extends React.Component {\n\n  state = {\n    buName: \"\",\n    buNameValid: false,\n    buNameInvalid: false,\n\n    engineer: \"\",\n    tmValid: false,\n    tmInvalid: false,\n\n    BUID: this.props.location.res == (null || undefined) ? \"\" : this.props.location.res.BUID,\n\n    userArr: []\n  }\n\n  componentDidMount() {\n    this.fetchUser();\n    console.log(\"Props\", this.props)\n  }\n\n  /*Api Calls*/\n  dataRequest(URL, params) {\n    return fetch(WEB_URL + URL, {\n      method: 'POST',\n      'credentials': 'include',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(params)\n    })\n      .then(data => {\n        if (data.status == 401) {\n          this.props.history.push('/login');\n        }\n        else if (data.status == 403) {\n          this.props.history.push('/login');\n        }\n        return data.json()\n      })\n      .catch(err => {\n        return err\n      })\n  }\n\n  fetchUser = () => {\n    // const BUID = \"5efdbd9daf5de244e8660b38\"\n    const BUID = this.state.BUID\n    fetch(WEB_URL + \"/user/fetch\")\n   // fetch(WEB_URL + \"/user/fetch?all=1&utype=BU Representative\")\n      .then(response => response.json())\n      .then(data => {\n        if (data != null || data != undefined && Array.isArray(data.data)) {\n          this.setState({\n            userArr: data.data\n          })\n        }\n      })\n      .catch(err => {\n\n      })\n  }\n\n  handleEnggChange = (e) => {\n    if (e.target.value != \"\" && e.target.value != \"Please Select Engineer\") {\n      this.setState({\n        engineer: e.target.value,\n        tmValid: true,\n        tmInvalid: false\n      })\n    }\n    else {\n      this.setState({\n        tmValid: false,\n        tmInvalid: true\n      })\n    }\n  }\n\n  handleBuNameChange = (e) => {\n    var letters = /^[a-zA-Z-,]+(\\s{0,1}[a-zA-Z-, ])*$/;\n    if (e.target.value != \"\" && e.target.value != null && e.target.value.match(letters)) {\n      this.setState({\n        buName: e.target.value,\n        buNameValid: true,\n        buNameInvalid: false\n      })\n    }\n    else {\n      this.setState({\n        buName: \"\",\n        buNameValid: false,\n        buNameInvalid: true\n      })\n    }\n  }\n\n  handleSubmit = () => {\n    const alert = this.props.alert;\n\n    if (this.state.buNameValid && this.state.tmValid) {\n      let params = {};\n      params.BUName = this.state.buName;\n      params.BURPID = this.state.engineer;\n\n      //console.log(\"params\", params,  JSON.stringify(params.dueDate))\n      this.dataRequest('/bu/add', params)\n        .then(data => {\n          if (data.message != undefined) {\n            alert.show(data.message);\n          }\n          else {\n            alert.show(\"Internal Server Error !\")\n          }\n        })\n\n        .catch(error => {\n          console.log(\"inside TRForm\", error)\n        })\n    }\n    else {\n      alert.show(\"Please fill all the required fields\")\n    }\n  }\n\n  handleReset = () => {\n    this.setState({\n      buName: \"\",\n      buNameValid: false,\n      buNameInvalid: false,\n  \n      engineer: \"\",\n      tmValid: false,\n      tmInvalid: false,\n\n    })\n  }\n\n  render() {\n    let userArr = this.state.userArr;\n    let optionItems1 = userArr.map((res) =>\n      // console.log(\"users\",res, res._id, res.name)\n      <option key={res._id} value={res._id}>{res.name}</option>\n\n    )\n    return (\n      <>\n        <CCard>\n          <CCardHeader>\n            Add/Edit Business Unit Information\n          </CCardHeader>\n          <CCardBody>\n            <CCol xs=\"3\">\n\n            </CCol>\n            <CCol xs=\"7\">\n              <CForm action=\"\" method=\"post\" encType=\"multipart/form-data\" className=\"form-horizontal\">\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"text-input\">Business Unit Name<span style= {{color: 'red'}}>*</span></CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CInput\n                      id=\"text-input\"\n                      name=\"text-input\"\n                      onChange={e => this.handleBuNameChange(e)}\n                      value={this.state.buName}\n                      valid={this.state.buNameValid}\n                      invalid= {this.state.buNameInvalid}\n                      placeholder=\"Enter BU Name\" />\n                    <CValidFeedback>Looks Good!</CValidFeedback>\n                    <CInvalidFeedback>Enter Valid Name!</CInvalidFeedback>\n                  </CCol>\n                </CFormGroup>\n\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"select\">Business Unit Lead<span style= {{color: 'red'}}>*</span></CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CSelect\n                      custom\n                      name=\"select\"\n                      id=\"select\"\n                      value={this.state.engineer}\n                      valid={this.state.tmValid}\n                      invalid={this.state.tmInvalid}\n                      onChange={e => this.handleEnggChange(e)}\n                    >\n                      <option>Please Select Engineer</option>\n                      {optionItems1}\n                      {/* <option>1</option>\n                      <option>2</option>\n                      <option>3</option>\n                      <option>4</option>\n                      <option>5</option>\n                      <option>6</option> */}\n                    </CSelect>\n                    <CValidFeedback>Looks Good!</CValidFeedback>\n                    <CInvalidFeedback>This field is required!</CInvalidFeedback>\n                  </CCol>\n                </CFormGroup>\n\n              </CForm>\n\n            </CCol>\n\n          </CCardBody>\n          <CCardFooter>\n            <CButton\n              type=\"submit\"\n              size=\"sm\"\n              color=\"primary\"\n              style={{ margin: \"3px\" }}\n              onClick={this.handleSubmit}\n            >\n              {/* <CIcon name=\"cil-scrubber\" /> */}\n              Submit\n            </CButton>\n\n            <CButton\n              type=\"reset\"\n              size=\"sm\"\n              color=\"danger\"\n              style={{ margin: \"3px\" }}\n              onClick={this.handleReset}\n            >\n              {/* <CIcon name=\"cil-ban\" /> */}\n              Reset\n            </CButton>\n\n          <Link to = \"/buManagement\">\n            <CButton\n              size=\"sm\" color=\"dark\" style={{ margin: \"3px\" }}\n             // href=\"/src/dashboard/Bumanagement#/Bumanagement\"\n            >\n              Back\n            </CButton>\n          </Link>\n          </CCardFooter>\n        </CCard>\n      </>\n    )\n  }\n}\nexport default withAlert()(BasicForms);"],"sourceRoot":""}