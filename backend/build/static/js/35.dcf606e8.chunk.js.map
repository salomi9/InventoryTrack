{"version":3,"sources":["contant/custom.js","dashboard/Forms/TrForm.js"],"names":["WEB_URL","date","Date","toISOString","substr","BasicForms","state","ticketNo","undefined","props","location","res","BUID","statusOfTicket","ticketStatusExport","statusInvalid","statusValid","sendToBack","ticketStatus","priority","priorityInvalid","priorityValid","sendBackPri","ticketPriority","assignedMember","tmValid","tmInvalid","dueDate","moment","format","validDueDate","invalidDueDate","userArr","fetchUser","fetch","then","response","json","data","setState","catch","err","fetchDropDowns","Array","isArray","handleStatus","e","target","value","handlePriority","handleEnggChange","engineer","handleDueDateChange","handleSubmit","alert","console","log","params","status","userType","dataRequest","message","show","error","handleReset","this","URL","method","headers","body","JSON","stringify","history","push","optionItems1","map","key","_id","name","ticketStatusArr","index","ticketPriorityArr","xs","action","encType","className","row","md","htmlFor","id","disabled","placeholder","style","color","valid","invalid","custom","onChange","type","min","size","margin","onClick","to","React","Component","withAlert"],"mappings":"6KAKeA,IADC,I,+JCqBZC,GADO,IAAIC,MACCC,cAAcC,OAAO,EAAG,IAClCC,E,4MAEJC,MAAQ,CACNC,cAA8CC,GAApC,EAAKC,MAAMC,SAASC,IAA6B,GAAK,EAAKF,MAAMC,SAASC,IAAIJ,SAExFK,UAA0CJ,GAApC,EAAKC,MAAMC,SAASC,IAA6B,GAAK,EAAKF,MAAMC,SAASC,IAAIC,KAEpFC,oBAAmEL,GAAnD,EAAKC,MAAMC,SAASI,mBAA4C,GAAK,EAAKL,MAAMC,SAASI,mBACzGC,eAAe,EACfC,aAAa,EACbC,WAAY,EACZC,aAAc,GAEdC,cAA8CX,GAApC,EAAKC,MAAMC,SAASC,IAA6B,GAAK,EAAKF,MAAMC,SAASC,IAAIQ,SACxFC,iBAAiB,EACjBC,eAAe,EACfC,YAAa,EACbC,eAAgB,GAKhBC,oBAAoDhB,GAApC,EAAKC,MAAMC,SAASC,IAA6B,GAAK,EAAKF,MAAMC,SAASC,IAAIa,eAE9FC,SAAS,EACTC,WAAW,EAEXC,aAA6CnB,GAApC,EAAKC,MAAMC,SAASC,IAA6B,GAAKiB,IAAO,EAAKnB,MAAMC,SAASC,IAAIgB,SAASE,OAAO,cAC9GC,cAAc,EACdC,gBAAgB,EAEhBC,QAAS,I,EAkCXC,UAAY,WAEV,IAAMrB,EAAO,EAAKN,MAAMM,KACxBsB,MAAMlC,IAAU,oBAAsBY,EAAO,sBAC1CuB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,QACsB9B,GAAtB8B,EAAKA,MAA+BA,EAAKA,MAC3C,EAAKC,SAAS,CACZP,QAASM,EAAKA,UAInBE,OAAM,SAAAC,Q,EAKXC,eAAiB,WAEfR,MAAMlC,IAAU,aACbmC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACS,MAARA,QAAwB9B,GAAR8B,IAAsBK,MAAMC,QAAQN,EAAKA,OAC5D,EAAKC,SAAS,CACZrB,aAAcoB,EAAKA,UAIxBE,OAAM,SAAAC,GACL,OAAOA,KAGXP,MAAMlC,IAAU,aACbmC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACS,MAARA,QAAwB9B,GAAR8B,IAAsBK,MAAMC,QAAQN,EAAKA,OAC5D,EAAKC,SAAS,CACZhB,eAAgBe,EAAKA,UAI1BE,OAAM,SAAAC,GACL,OAAOA,M,EAKbI,aAAe,SAACC,GACd,GAAsB,IAAlBA,EAAEC,OAAOC,OAAiC,wBAAlBF,EAAEC,OAAOC,MAAiC,CACpE,IAAI9B,EAAe,EACG,QAAlB4B,EAAEC,OAAOC,MACX9B,EAAe,EAEU,eAAlB4B,EAAEC,OAAOC,MAChB9B,EAAe,EAEU,WAAlB4B,EAAEC,OAAOC,MAChB9B,EAAe,EAEU,UAAlB4B,EAAEC,OAAOC,MAChB9B,EAAe,EAEU,WAAlB4B,EAAEC,OAAOC,QAChB9B,EAAe,GAEjB,EAAKqB,SAAS,CACZtB,WAAYC,EACZL,eAAgBiC,EAAEC,OAAOC,MACzBhC,aAAa,EACbD,eAAe,SAIjB,EAAKwB,SAAS,CACZ1B,eAAgB,GAChBE,eAAe,EACfC,aAAa,K,EAKnBiC,eAAiB,SAACH,GAChB,GAAsB,IAAlBA,EAAEC,OAAOC,OAAiC,0BAAlBF,EAAEC,OAAOC,MAAmC,CACtE,IAAI7B,EAAW,EACO,QAAlB2B,EAAEC,OAAOC,MACX7B,EAAW,EAEc,UAAlB2B,EAAEC,OAAOC,MAChB7B,EAAW,EAEc,OAAlB2B,EAAEC,OAAOC,QAChB7B,EAAW,GAEb,EAAKoB,SAAS,CACZjB,YAAaH,EACbA,SAAU2B,EAAEC,OAAOC,MACnB3B,eAAe,EACfD,iBAAiB,SAInB,EAAKmB,SAAS,CACZlB,eAAe,EACfD,iBAAiB,K,EAKvB8B,iBAAmB,SAACJ,GACI,IAAlBA,EAAEC,OAAOC,OAAiC,0BAAlBF,EAAEC,OAAOC,MACnC,EAAKT,SAAS,CAEZf,eAAgBsB,EAAEC,OAAOC,MACzBvB,SAAS,EACTC,WAAW,IAIb,EAAKa,SAAS,CACZY,SAAU,GACV3B,eAAgB,GAChBC,SAAS,EACTC,WAAW,K,EAKjB0B,oBAAsB,SAACN,GAEC,IAAlBA,EAAEC,OAAOC,MACX,EAAKT,SAAS,CACZZ,QAASmB,EAAEC,OAAOC,MAClBjB,gBAAgB,EAChBD,cAAc,IAIhB,EAAKS,SAAS,CACZR,gBAAgB,EAChBD,cAAc,K,EAKpBuB,aAAe,WACb,IAAMC,EAAQ,EAAK7C,MAAM6C,MAEzB,GADAC,QAAQC,IAAI,kBAAmB,EAAKlD,OAEL,MAA7B,EAAKA,MAAMO,qBAAuDL,GAA7B,EAAKF,MAAMO,gBAA4D,IAA7B,EAAKP,MAAMO,gBACnE,MAAvB,EAAKP,MAAMa,eAA2CX,GAAvB,EAAKF,MAAMa,UAAgD,IAAvB,EAAKb,MAAMa,UACjD,MAA7B,EAAKb,MAAMkB,qBAAuDhB,GAA7B,EAAKF,MAAMkB,gBAA4D,IAA7B,EAAKlB,MAAMkB,gBACpE,MAAtB,EAAKlB,MAAMqB,cAAyCnB,GAAtB,EAAKF,MAAMqB,SAA8C,IAAtB,EAAKrB,MAAMqB,QAC5E,CACA,IAAI8B,EAAS,GACbA,EAAOlD,SAAW,EAAKD,MAAMC,SAC7BkD,EAAOC,OAAS,EAAKpD,MAAMO,eAC3B4C,EAAOtC,SAAW,EAAKb,MAAMa,SAC7BsC,EAAON,SAAW,EAAK7C,MAAM6C,SAC7BM,EAAO9B,QAAU,EAAKrB,MAAMqB,QAC5B8B,EAAOE,SAAW,sBAClBF,EAAOjC,eAAiB,EAAKlB,MAAMkB,eAEnC,EAAKoC,YAAY,qBAAsBH,GACpCtB,MAAK,SAAAG,QACgB9B,GAAhB8B,EAAKuB,QACPP,EAAMQ,KAAKxB,EAAKuB,SAGhBP,EAAMQ,KAAK,8BAIdtB,OAAM,SAAAuB,GACLR,QAAQC,IAAI,gBAAiBO,WAIjCT,EAAMQ,KAAK,wC,EAIfE,YAAc,WACZ,EAAKzB,SAAS,CACZ1B,eAAgB,GAChBE,eAAe,EACfC,aAAa,EAEbG,SAAU,GACVC,iBAAiB,EACjBC,eAAe,EAEf8B,SAAU,GACV3B,eAAgB,GAChBC,SAAS,EACTC,WAAW,EAEXC,QAAS,GACTG,cAAc,EACdC,gBAAgB,K,kEApOlBkC,KAAKhC,YACLgC,KAAKvB,mB,kCAKKwB,EAAKT,GAAS,IAAD,OACvB,OAAOvB,MAAMlC,IAAUkE,EAAK,CAC1BC,OAAQ,OACR,YAAe,UACfC,QAAS,CACP,OAAU,mBACV,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUd,KAEpBtB,MAAK,SAAAG,GAOJ,OANmB,KAAfA,EAAKoB,QAGe,KAAfpB,EAAKoB,SAFZ,EAAKjD,MAAM+D,QAAQC,KAAK,UAKnBnC,EAAKD,UAEbG,OAAM,SAAAC,GACL,OAAOA,O,+BA+MH,IAAD,OAEHiC,EADUT,KAAK3D,MAAM0B,QACE2C,KAAI,SAAChE,GAAD,OAE7B,4BAAQiE,IAAKjE,EAAIkE,IAAK7B,MAAOrC,EAAIkE,KAAMlE,EAAImE,SAKzCC,EADed,KAAK3D,MAAMY,aACKyD,KAAI,SAAChE,EAAKqE,GAAN,OACrC,4BAAQJ,IAAKI,EAAOhC,MAAOrC,GAAMA,MAI/BsE,EADiBhB,KAAK3D,MAAMiB,eACOoD,KAAI,SAAChE,EAAKqE,GAAN,OACzC,4BAAQJ,IAAKI,EAAOhC,MAAOrC,GAAMA,MAInC,OACE,oCACE,kBAAC,IAAD,KACE,kBAAC,IAAD,yBAGA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMuE,GAAG,MAGT,kBAAC,IAAD,CAAMA,GAAG,KACP,kBAAC,IAAD,CAAOC,OAAO,GAAGhB,OAAO,OAAOiB,QAAQ,sBAAsBC,UAAU,mBACrE,kBAAC,IAAD,CAAYC,KAAG,GACb,kBAAC,IAAD,CAAMC,GAAG,KACP,kBAAC,KAAD,CAAQC,QAAQ,cAAhB,eAEF,kBAAC,IAAD,CAAMN,GAAG,KAAKK,GAAG,KACf,kBAAC,IAAD,CACEE,GAAG,aACHX,KAAK,aACLY,UAAQ,EACR1C,MAAOiB,KAAK3D,MAAMC,SAClBoF,YAAY,SACd,kBAAC,IAAD,gCAIJ,kBAAC,IAAD,CAAYL,KAAG,GACb,kBAAC,IAAD,CAAMC,GAAG,KACP,kBAAC,KAAD,CACEC,QAAQ,UADV,mBAGkB,0BAAMI,MAAO,CAAEC,MAAO,QAAtB,OAGpB,kBAAC,IAAD,CAAMX,GAAG,KAAKK,GAAG,KACf,kBAAC,KAAD,CACEO,MAAO7B,KAAK3D,MAAMU,YAClB+E,QAAS9B,KAAK3D,MAAMS,cACpBiF,QAAM,EACNlB,KAAK,SACLW,GAAG,SACHzC,MAAOiB,KAAK3D,MAAMO,eAClBoF,SAAU,SAAAnD,GAAC,OAAI,EAAKD,aAAaC,KACjC,gCAAuC,IAA7BmB,KAAK3D,MAAMO,eAAuBoD,KAAK3D,MAAMO,eAAiB,wBAMvEkE,GAEH,kBAAC,KAAD,oBACA,kBAAC,IAAD,kCAIJ,kBAAC,IAAD,CAAYO,KAAG,GACb,kBAAC,IAAD,CAAMC,GAAG,KACP,kBAAC,KAAD,CAAQC,QAAQ,UAAhB,WAAiC,0BAAMI,MAAO,CAAEC,MAAO,QAAtB,OAEnC,kBAAC,IAAD,CAAMX,GAAG,KAAKK,GAAG,KACf,kBAAC,KAAD,CACEO,MAAO7B,KAAK3D,MAAMe,cAClB0E,QAAS9B,KAAK3D,MAAMc,gBACpB4E,QAAM,EACNlB,KAAK,SACLW,GAAG,SACHzC,MAAOiB,KAAK3D,MAAMa,SAClB8E,SAAU,SAAAnD,GAAC,OAAI,EAAKG,eAAeH,KACnC,0DACCmC,GAKH,kBAAC,KAAD,oBACA,kBAAC,IAAD,kCAIJ,kBAAC,IAAD,CAAYK,KAAG,GACb,kBAAC,IAAD,CAAMC,GAAG,KACP,kBAAC,KAAD,CAAQC,QAAQ,UAAhB,wBAA8C,0BAAMI,MAAO,CAAEC,MAAO,QAAtB,OAEhD,kBAAC,IAAD,CAAMX,GAAG,KAAKK,GAAG,KACf,kBAAC,KAAD,CACES,QAAM,EACNlB,KAAK,SACLW,GAAG,SACHzC,MAAOiB,KAAK3D,MAAMkB,eAClBsE,MAAO7B,KAAK3D,MAAMmB,QAClBsE,QAAS9B,KAAK3D,MAAMoB,UACpBuE,SAAU,SAAAnD,GAAC,OAAI,EAAKI,iBAAiBJ,KAErC,0DAEC4B,GAQH,kBAAC,KAAD,oBACA,kBAAC,IAAD,kCAIJ,kBAAC,IAAD,CAAYY,KAAG,GACb,kBAAC,IAAD,CAAMC,GAAG,KACP,kBAAC,KAAD,CAAQC,QAAQ,cAAhB,WAAqC,0BAAMI,MAAO,CAAEC,MAAO,QAAtB,OAEvC,kBAAC,IAAD,CAAMX,GAAG,KAAKK,GAAG,KACf,kBAAC,IAAD,CACEW,KAAK,OACLT,GAAG,aACHX,KAAK,aACLa,YAAY,OACZ3C,MAAOiB,KAAK3D,MAAMqB,QAClBmE,MAAO7B,KAAK3D,MAAMwB,aAClBiE,QAAS9B,KAAK3D,MAAMyB,eACpBkE,SAAU,SAAAnD,GAAC,OAAI,EAAKM,oBAAoBN,IACxCqD,IAAKlG,IAEP,kBAAC,KAAD,oBACA,kBAAC,IAAD,qCAUV,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEiG,KAAK,SACLE,KAAK,KACLP,MAAM,UACND,MAAO,CAAES,OAAQ,OACjBC,QAASrC,KAAKZ,cALhB,UAWA,kBAAC,IAAD,CACE6C,KAAK,QACLE,KAAK,KACLP,MAAM,SACND,MAAO,CAAES,OAAQ,OACjBC,QAASrC,KAAKD,aALhB,SAWA,kBAAC,IAAD,CAAMuC,GAAG,gBACP,kBAAC,IAAD,CACEH,KAAK,KAAKP,MAAM,OAAOD,MAAO,CAAES,OAAQ,QAD1C,gB,GAhcWG,IAAMC,WA8chBC,wBAAYrG","file":"static/js/35.dcf606e8.chunk.js","sourcesContent":["//For Development with react - local db\n// const WEB_URL = \"http://127.0.0.1:5050\" \n\n//For deployment with node - Compile EXE\nconst WEB_URL = \"\"\nexport default WEB_URL;","import React from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CForm,\n  CFormGroup,\n  CFormText,\n  CValidFeedback,\n  CInvalidFeedback,\n  CInput,\n  CLabel,\n  CSelect,\n  CRow\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport WEB_URL from '../../contant/custom';\nimport moment from 'moment';\nimport { withAlert } from 'react-alert';\nimport { Link } from 'react-router-dom';\n\nvar curr = new Date();\nvar date = curr.toISOString().substr(0, 10);\nclass BasicForms extends React.Component {\n\n  state = {\n    ticketNo: this.props.location.res == (null || undefined) ? \"\" : this.props.location.res.ticketNo,\n\n    BUID: this.props.location.res == (null || undefined) ? \"\" : this.props.location.res.BUID,\n\n    statusOfTicket: this.props.location.ticketStatusExport == (null || undefined) ? \"\" : this.props.location.ticketStatusExport,\n    statusInvalid: false,\n    statusValid: false,\n    sendToBack: 0,\n    ticketStatus: [],\n\n    priority: this.props.location.res == (null || undefined) ? \"\" : this.props.location.res.priority,\n    priorityInvalid: false,\n    priorityValid: false,\n    sendBackPri: 0,\n    ticketPriority: [],\n\n    // engineer: this.props.location.res == (null || undefined) ? \"\" : this.props.location.res.engineer,\n    // engineer: \"\",\n\n    assignedMember: this.props.location.res == (null || undefined) ? \"\" : this.props.location.res.assignedMember,\n\n    tmValid: false,\n    tmInvalid: false,\n\n    dueDate: this.props.location.res == (null || undefined) ? \"\" : moment(this.props.location.res.dueDate).format(\"YYYY-MM-DD\"),\n    validDueDate: false,\n    invalidDueDate: false,\n\n    userArr: []\n  }\n\n  componentDidMount() {\n    this.fetchUser();\n    this.fetchDropDowns();\n    //console.log(\"Props\", this.props)\n  }\n\n  /*Api Calls*/\n  dataRequest(URL, params) {\n    return fetch(WEB_URL + URL, {\n      method: 'POST',\n      'credentials': 'include',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(params)\n    })\n      .then(data => {\n        if (data.status == 401) {\n          this.props.history.push('/login');\n        }\n        else if (data.status == 403) {\n          this.props.history.push('/login');\n        }\n        return data.json()\n      })\n      .catch(err => {\n        return err\n      })\n  }\n\n  fetchUser = () => {\n    // const BUID = \"5f000a29d9d6482045b360c9\"\n    const BUID = this.state.BUID\n    fetch(WEB_URL + \"/user/fetch?BUID=\" + BUID + \"&utype=Team Member\")\n      .then(response => response.json())\n      .then(data => {\n        if (data.data != (null || undefined) && data.data) {\n          this.setState({\n            userArr: data.data\n          })\n        }\n      })\n      .catch(err => {\n\n      })\n  }\n\n  fetchDropDowns = () => {\n\n    fetch(WEB_URL + \"/types/ts\")\n      .then(response => response.json())\n      .then(data => {\n        if ((data != null || data != undefined) && Array.isArray(data.data)) {\n          this.setState({\n            ticketStatus: data.data\n          })\n        }\n      })\n      .catch(err => {\n        return err;\n      })\n\n    fetch(WEB_URL + \"/types/tp\")\n      .then(response => response.json())\n      .then(data => {\n        if ((data != null || data != undefined) && Array.isArray(data.data)) {\n          this.setState({\n            ticketPriority: data.data\n          })\n        }\n      })\n      .catch(err => {\n        return err;\n      })\n\n  }\n\n  handleStatus = (e) => {\n    if (e.target.value != \"\" && e.target.value != \"Please select status\") {\n      let ticketStatus = 0;\n      if (e.target.value == \"Open\") {\n        ticketStatus = 1\n      }\n      else if (e.target.value == \"In Progress\") {\n        ticketStatus = 2\n      }\n      else if (e.target.value == \"On hold\") {\n        ticketStatus = 3\n      }\n      else if (e.target.value == \"Closed\") {\n        ticketStatus = 4\n      }\n      else if (e.target.value == \"Delayed\") {\n        ticketStatus = 5\n      }\n      this.setState({\n        sendToBack: ticketStatus,\n        statusOfTicket: e.target.value,\n        statusValid: true,\n        statusInvalid: false\n      })\n    }\n    else {\n      this.setState({\n        statusOfTicket: \"\",\n        statusInvalid: true,\n        statusValid: false\n      })\n    }\n  }\n\n  handlePriority = (e) => {\n    if (e.target.value != \"\" && e.target.value != \"Please Select Priority\") {\n      let priority = 0;\n      if (e.target.value == \"High\") {\n        priority = 1;\n      }\n      else if (e.target.value == \"Medium\") {\n        priority = 2;\n      }\n      else if (e.target.value == \"Low\") {\n        priority = 3;\n      }\n      this.setState({\n        sendBackPri: priority,\n        priority: e.target.value,\n        priorityValid: true,\n        priorityInvalid: false\n      })\n    }\n    else {\n      this.setState({\n        priorityValid: false,\n        priorityInvalid: true\n      })\n    }\n  }\n\n  handleEnggChange = (e) => {\n    if (e.target.value != \"\" && e.target.value != \"Please Select Engineer\") {\n      this.setState({\n        // engineer: e.target.value,\n        assignedMember: e.target.value,\n        tmValid: true,\n        tmInvalid: false\n      })\n    }\n    else {\n      this.setState({\n        engineer: \"\",\n        assignedMember: \"\",\n        tmValid: false,\n        tmInvalid: true\n      })\n    }\n  }\n\n  handleDueDateChange = (e) => {\n\n    if (e.target.value != \"\") {\n      this.setState({\n        dueDate: e.target.value,\n        invalidDueDate: false,\n        validDueDate: true\n      })\n    }\n    else {\n      this.setState({\n        invalidDueDate: true,\n        validDueDate: false\n      })\n    }\n  }\n\n  handleSubmit = () => {\n    const alert = this.props.alert;\n    console.log(\"state on submit\", this.state)\n    if (\n      this.state.statusOfTicket != null && this.state.statusOfTicket != undefined && this.state.statusOfTicket != \"\" &&\n      this.state.priority != null && this.state.priority != undefined && this.state.priority != \"\" &&\n      this.state.assignedMember != null && this.state.assignedMember != undefined && this.state.assignedMember != \"\" &&\n      this.state.dueDate != null && this.state.dueDate != undefined && this.state.dueDate != \"\"\n    ) {\n      let params = {};\n      params.ticketNo = this.state.ticketNo;\n      params.status = this.state.statusOfTicket;\n      params.priority = this.state.priority;\n      params.engineer = this.state.engineer;\n      params.dueDate = this.state.dueDate;\n      params.userType = \"Team Representative\"\n      params.assignedMember = this.state.assignedMember;\n      //console.log(\"params\", params,  JSON.stringify(params.dueDate))\n      this.dataRequest('/ticket/editTicket', params)\n        .then(data => {\n          if (data.message != undefined) {\n            alert.show(data.message);\n          }\n          else {\n            alert.show(\"Internal Server Error !\")\n          }\n        })\n\n        .catch(error => {\n          console.log(\"inside TRForm\", error)\n        })\n    }\n    else {\n      alert.show(\"Please fill all the required fields\")\n    }\n  }\n\n  handleReset = () => {\n    this.setState({\n      statusOfTicket: \"\",\n      statusInvalid: false,\n      statusValid: false,\n\n      priority: \"\",\n      priorityInvalid: false,\n      priorityValid: false,\n\n      engineer: \"\",\n      assignedMember: \"\",\n      tmValid: false,\n      tmInvalid: false,\n\n      dueDate: \"\",\n      validDueDate: false,\n      invalidDueDate: false\n\n    })\n  }\n\n  render() {\n    let userArr = this.state.userArr;\n    let optionItems1 = userArr.map((res) =>\n      // console.log(\"users\",res, res._id, res.name)\n      <option key={res._id} value={res._id}>{res.name}</option>\n\n    )\n\n    let ticketStatus = this.state.ticketStatus;\n    let ticketStatusArr = ticketStatus.map((res, index) =>\n      <option key={index} value={res}>{res}</option>\n    )\n\n    let ticketPriority = this.state.ticketPriority;\n    let ticketPriorityArr = ticketPriority.map((res, index) =>\n      <option key={index} value={res}>{res}</option>\n    )\n\n\n    return (\n      <>\n        <CCard>\n          <CCardHeader>\n            Edit Ticket Form\n          </CCardHeader>\n          <CCardBody>\n            <CCol xs=\"3\">\n\n            </CCol>\n            <CCol xs=\"7\">\n              <CForm action=\"\" method=\"post\" encType=\"multipart/form-data\" className=\"form-horizontal\">\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"text-input\">Ticket No:</CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CInput\n                      id=\"text-input\"\n                      name=\"text-input\"\n                      disabled\n                      value={this.state.ticketNo}\n                      placeholder=\"Text\" />\n                    <CFormText>You can not edit this</CFormText>\n                  </CCol>\n                </CFormGroup>\n\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel\n                      htmlFor=\"select\"\n                    >\n                      Status Of Ticket<span style={{ color: 'red' }}>*</span>\n                    </CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CSelect\n                      valid={this.state.statusValid}\n                      invalid={this.state.statusInvalid}\n                      custom\n                      name=\"select\"\n                      id=\"select\"\n                      value={this.state.statusOfTicket}\n                      onChange={e => this.handleStatus(e)}>\n                      <option >{this.state.statusOfTicket != \"\" ? this.state.statusOfTicket : \"Please select status\"}</option>\n                      {/* <option >Open</option>\n                      <option >In Progress</option>\n                      <option >On hold</option>\n                      <option >Closed</option>\n                      <option >Delayed</option> */}\n                      {ticketStatusArr}\n                    </CSelect>\n                    <CValidFeedback>Looks Good!</CValidFeedback>\n                    <CInvalidFeedback>This field is required!</CInvalidFeedback>\n                  </CCol>\n                </CFormGroup>\n\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"select\">Priority<span style={{ color: 'red' }}>*</span></CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CSelect\n                      valid={this.state.priorityValid}\n                      invalid={this.state.priorityInvalid}\n                      custom\n                      name=\"select\"\n                      id=\"select\"\n                      value={this.state.priority}\n                      onChange={e => this.handlePriority(e)}>\n                      <option >Please Select Priority</option>\n                      {ticketPriorityArr}\n                      {/* <option >High</option>\n                      <option >Medium</option>\n                      <option >Low</option> */}\n                    </CSelect>\n                    <CValidFeedback>Looks Good!</CValidFeedback>\n                    <CInvalidFeedback>This field is required!</CInvalidFeedback>\n                  </CCol>\n                </CFormGroup>\n\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"select\">Concerned Team Member<span style={{ color: 'red' }}>*</span></CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CSelect\n                      custom\n                      name=\"select\"\n                      id=\"select\"\n                      value={this.state.assignedMember}\n                      valid={this.state.tmValid}\n                      invalid={this.state.tmInvalid}\n                      onChange={e => this.handleEnggChange(e)}\n                    >\n                      <option>Please Select Engineer</option>\n                      {/* <option>{this.state.engineer != \"\" ? this.state.assignedMember : \"Please select Engineer\"}</option> */}\n                      {optionItems1}\n                      {/* <option>1</option>\n                      <option>2</option>\n                      <option>3</option>\n                      <option>4</option>\n                      <option>5</option>\n                      <option>6</option> */}\n                    </CSelect>\n                    <CValidFeedback>Looks Good!</CValidFeedback>\n                    <CInvalidFeedback>This field is required!</CInvalidFeedback>\n                  </CCol>\n                </CFormGroup>\n\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"date-input\">Due Date<span style={{ color: 'red' }}>*</span></CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CInput\n                      type=\"date\"\n                      id=\"date-input\"\n                      name=\"date-input\"\n                      placeholder=\"date\"\n                      value={this.state.dueDate}\n                      valid={this.state.validDueDate}\n                      invalid={this.state.invalidDueDate}\n                      onChange={e => this.handleDueDateChange(e)}\n                      min={date}\n                    />\n                    <CValidFeedback>Looks Good!</CValidFeedback>\n                    <CInvalidFeedback>This field is required!</CInvalidFeedback>\n                  </CCol>\n                </CFormGroup>\n\n\n              </CForm>\n\n            </CCol>\n\n          </CCardBody>\n          <CCardFooter>\n            <CButton\n              type=\"submit\"\n              size=\"sm\"\n              color=\"primary\"\n              style={{ margin: \"3px\" }}\n              onClick={this.handleSubmit}\n            >\n              {/* <CIcon name=\"cil-scrubber\" /> */}\n                Submit\n            </CButton>\n\n            <CButton\n              type=\"reset\"\n              size=\"sm\"\n              color=\"danger\"\n              style={{ margin: \"3px\" }}\n              onClick={this.handleReset}\n            >\n              {/* <CIcon name=\"cil-ban\" /> */}\n                  Reset\n            </CButton>\n\n            <Link to=\"/ticketTable\">\n              <CButton\n                size=\"sm\" color=\"dark\" style={{ margin: \"3px\" }}\n              //href=\"/src/dashboard/Bumanagement#/ticketTable\"\n              >\n                Back\n            </CButton>\n            </Link>\n\n          </CCardFooter>\n        </CCard>\n      </>\n    )\n  }\n}\nexport default withAlert()(BasicForms);"],"sourceRoot":""}