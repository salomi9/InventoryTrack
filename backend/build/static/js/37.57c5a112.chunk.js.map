{"version":3,"sources":["contant/custom.js","dashboard/Forms/buOwnerForm.js"],"names":["WEB_URL","BasicForms","state","ticketNo","undefined","props","location","res","BUID","statusOfTicket","ticketStatusExport","statusInvalid","statusValid","sendToBack","ticketStatus","priority","priorityInvalid","priorityValid","sendBackPri","ticketPriority","engineer","teamRepresentative","tmValid","tmInvalid","dueDate","moment","format","validDueDate","invalidDueDate","userArr","fetchUser","fetch","then","response","json","data","setState","catch","err","handleEnggChange","e","console","log","target","value","handleSubmit","alert","params","status","userType","dataRequest","message","show","error","handleReset","this","URL","method","headers","body","JSON","stringify","history","push","optionItems1","map","key","_id","name","index","xs","action","encType","className","row","md","htmlFor","id","disabled","placeholder","style","color","custom","valid","invalid","onChange","type","size","margin","onClick","to","React","Component","withAlert"],"mappings":"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","file":"static/js/37.57c5a112.chunk.js","sourcesContent":["//For Development with react - local db\n// const WEB_URL = \"http://127.0.0.1:5050\" \n\n//For deployment with node - Compile EXE\nconst WEB_URL = \"\"\nexport default WEB_URL;","import React from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CForm,\n  CFormGroup,\n  CFormText,\n  CValidFeedback,\n  CInvalidFeedback,\n  CInput,\n  CLabel,\n  CSelect,\n  CRow\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport WEB_URL from '../../contant/custom';\nimport moment from 'moment';\nimport { withAlert } from 'react-alert';\nimport { Link } from 'react-router-dom';\n\nclass BasicForms extends React.Component {\n\n  state = {\n    ticketNo: this.props.location.res == (null || undefined) ? \"\" : this.props.location.res.ticketNo,\n\n    BUID: this.props.location.res == (null || undefined) ? \"\" : this.props.location.res.BUID,\n\n    statusOfTicket: this.props.location.ticketStatusExport == (null || undefined) ? \"\" : this.props.location.ticketStatusExport,\n    statusInvalid: false,\n    statusValid: false,\n    sendToBack: 0,\n    ticketStatus: [],\n\n    priority: this.props.location.res == (null || undefined) ? \"\" : this.props.location.res.priority,\n    priorityInvalid: false,\n    priorityValid: false,\n    sendBackPri: 0,\n    ticketPriority: [],\n\n    engineer: this.props.location.res == (null || undefined) ? \"\" : this.props.location.res.teamRepresentative,\n    // engineer: \"\",\n\n    // assignedMember: this.props.location.res == (null || undefined) ? \"\" : this.props.location.res.assignedMember,\n\n    tmValid: false,\n    tmInvalid: false,\n\n    dueDate: this.props.location.res == (null || undefined) ? \"\" : moment(this.props.location.res.dueDate).format(\"YYYY-MM-DD\"),\n    validDueDate: false,\n    invalidDueDate: false,\n\n    userArr: []\n  }\n\n  componentDidMount() {\n    this.fetchUser();\n  }\n\n  /*Api Calls*/\n  dataRequest(URL, params) {\n    return fetch(WEB_URL + URL, {\n      method: 'POST',\n      'credentials': 'include',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(params)\n    })\n      .then(data => {\n        if (data.status == 401) {\n          this.props.history.push('/login');\n        }\n        else if (data.status == 403) {\n          this.props.history.push('/login');\n        }\n        return data.json()\n      })\n      .catch(err => {\n        return err\n      })\n  }\n\n  fetchUser = () => {\n    const BUID = this.state.BUID\n    fetch(WEB_URL + \"/user/fetch?BUID=\" + BUID + \"&utype=Team Representative\")\n      .then(response => response.json())\n      .then(data => {\n        if (data.data != (null || undefined) && data.data) {\n          this.setState({\n            userArr: data.data\n          })\n        }\n      })\n      .catch(err => {\n\n      })\n  }\n\n  handleEnggChange = (e) => {\n    console.log(\"Engineer \", e.target.value)\n    if (e.target.value != \"\" && e.target.value != \"Please Select Engineer\") {\n      this.setState({\n        engineer: e.target.value,\n        // assignedMember: e.target.value.text,\n        tmValid: true,\n        tmInvalid: false\n      })\n    }\n    else {\n      this.setState({\n        engineer: \"\",\n        // assignedMember: \"\",\n        tmValid: false,\n        tmInvalid: true\n      })\n    }\n  }\n\n  handleSubmit = () => {\n    const alert = this.props.alert;\n    console.log(\"state on submit\", this.state)\n    if (\n      // this.state.ticketNo != \"\" &&\n      // this.state.engineer != \"\"\n\n      this.state.ticketNo != null && this.state.ticketNo != undefined && this.state.ticketNo != \"\" &&\n      this.state.engineer != null && this.state.engineer != undefined && this.state.engineer != \"\" \n\n    ) {\n      let params = {};\n      params.ticketNo = this.state.ticketNo;\n      params.status = this.state.statusOfTicket;\n      params.priority = this.state.priority;\n      params.teamRepresentative = this.state.engineer;\n      params.dueDate = this.state.dueDate;\n      params.userType = \"BU Representative\";\n      // params.assignedMember = this.state.assignedMember;\n      //console.log(\"params\", params,  JSON.stringify(params.dueDate))\n      this.dataRequest('/ticket/editTicket', params)\n        .then(data => {\n          if (data.message != undefined) {\n            alert.show(data.message);\n          }\n          else {\n            alert.show(\"Internal Server Error !\")\n          }\n        })\n\n        .catch(error => {\n          console.log(\"inside TRForm\", error)\n        })\n    }\n    else {\n      alert.show(\"Please fill all the required fields\")\n    }\n  }\n\n  handleReset = () => {\n    this.setState({\n      statusOfTicket: \"\",\n      statusInvalid: false,\n      statusValid: false,\n\n      priority: \"\",\n      priorityInvalid: false,\n      priorityValid: false,\n\n      engineer: \"\",\n      // assignedMember: \"\",\n      tmValid: false,\n      tmInvalid: false,\n\n      dueDate: \"\",\n      validDueDate: false,\n      invalidDueDate: false\n\n    })\n  }\n\n  render() {\n    let userArr = this.state.userArr;\n    let optionItems1 = userArr.map((res) =>\n      // console.log(\"users\",res, res._id, res.name)\n      <option key={res._id} value={res._id}>{res.name}</option>\n\n    )\n\n    let ticketStatus = this.state.ticketStatus;\n    let ticketStatusArr = ticketStatus.map((res, index) =>\n      <option key={index} value={res}>{res}</option>\n    )\n\n    let ticketPriority = this.state.ticketPriority;\n    let ticketPriorityArr = ticketPriority.map((res, index) =>\n      <option key={index} value={res}>{res}</option>\n    )\n\n\n    return (\n      <>\n        <CCard>\n          <CCardHeader>\n            Edit Ticket Form\n          </CCardHeader>\n          <CCardBody>\n            <CCol xs=\"3\">\n\n            </CCol>\n            <CCol xs=\"7\">\n              <CForm action=\"\" method=\"post\" encType=\"multipart/form-data\" className=\"form-horizontal\">\n\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"text-input\">Ticket No:</CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CInput\n                      id=\"text-input\"\n                      name=\"text-input\"\n                      disabled\n                      value={this.state.ticketNo}\n                      placeholder=\"Text\" />\n                    <CFormText>You can not edit this</CFormText>\n                  </CCol>\n                </CFormGroup>\n\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"select\">Concerned Team Representative<span style={{ color: 'red' }}>*</span></CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CSelect\n                      custom\n                      name=\"select\"\n                      id=\"select\"\n                      value={this.state.engineer}\n                      valid={this.state.tmValid}\n                      invalid={this.state.tmInvalid}\n                      onChange={e => this.handleEnggChange(e)}\n                    >\n                      <option>Please Select Engineer</option>\n                      {/* <option>{this.state.engineer != \"\" ? this.state.assignedMember : \"Please select Engineer\"}</option> */}\n                      {optionItems1}\n                      {/* <option>1</option>\n                      <option>2</option>\n                      <option>3</option>\n                      <option>4</option>\n                      <option>5</option>\n                      <option>6</option> */}\n                    </CSelect>\n                    <CValidFeedback>Looks Good!</CValidFeedback>\n                    <CInvalidFeedback>This field is required!</CInvalidFeedback>\n                  </CCol>\n                </CFormGroup>\n\n\n\n              </CForm>\n\n            </CCol>\n\n          </CCardBody>\n          <CCardFooter>\n            <CButton\n              type=\"submit\"\n              size=\"sm\"\n              color=\"primary\"\n              style={{ margin: \"3px\" }}\n              onClick={this.handleSubmit}\n            >\n              {/* <CIcon name=\"cil-scrubber\" /> */}\n                Submit\n            </CButton>\n\n            <CButton\n              type=\"reset\"\n              size=\"sm\"\n              color=\"danger\"\n              style={{ margin: \"3px\" }}\n              onClick={this.handleReset}\n            >\n              {/* <CIcon name=\"cil-ban\" /> */}\n                  Reset\n            </CButton>\n\n            <Link to=\"/ticketTable\">\n              <CButton\n                size=\"sm\" color=\"dark\" style={{ margin: \"3px\" }}\n              //href=\"/src/dashboard/Bumanagement#/ticketTable\"\n              >\n                Back\n            </CButton>\n            </Link>\n\n          </CCardFooter>\n        </CCard>\n      </>\n    )\n  }\n}\nexport default withAlert()(BasicForms);"],"sourceRoot":""}