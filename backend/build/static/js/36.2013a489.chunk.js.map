{"version":3,"sources":["contant/custom.js","dashboard/Forms/adminForm.js"],"names":["WEB_URL","date","Date","toISOString","substr","BasicForms","state","ticketNo","undefined","props","location","res","startDate","startDateValid","startDateInvalid","ticketType","ticketTypeArr","ticketTypeValid","ticketTypeInvalid","bu","BUID","buArr","buValid","buInvalid","BUName","assignedMember","customerName","customerAddress","customerMNo","customerEmail","customerComplain","isValid","inWarranty","ticketStatusExport","priority","moment","dueDate","format","fetchBu","e","fetch","then","response","json","data","Array","isArray","setState","catch","err","fetchUser","userArr","fetchDropDowns","ticketStatus","handleStartDateChange","target","value","handleQueryChange","console","log","handleBuChange","text","handleEnggChange","engineer","engineerValid","engineerInvalid","handleCustomerNameChange","match","customerValid","customerInvalid","handleCustomerAddChange","customerAdd","customerAddValid","customerAddInvalid","handleCustomerMobChange","customerMob","customerMobValid","customerMobInvalid","handleEmailChange","test","customerEmailValid","customerEmailInvalid","handleComplain","customerRequest","customerRequestInvalid","customerRequestValid","handleValidity","validity","validityValid","validityInvalid","handleWarrantyChange","warrantyStatus","warrantyStatusInvalid","warrantyStatusValid","handleStatus","sendToBack","statusOfTicket","statusOfTicketValid","statusOfTicketInvalid","handlePriority","priorityValid","priorityInvalid","handleDueDateChange","dueDateInvalid","dueDateValid","handleSubmit","alert","param","parseInt","status","userType","dataRequest","message","show","error","handleReset","this","URL","params","method","headers","body","JSON","stringify","history","push","optionItems","map","index","key","_id","tickTypeArr","name","ticketStatusArr","style","height","overflowY","xs","action","encType","className","row","md","htmlFor","id","disabled","placeholder","color","custom","valid","invalid","onChange","type","autoComplete","rows","min","size","margin","onClick","to","React","Component","withAlert"],"mappings":"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","file":"static/js/36.2013a489.chunk.js","sourcesContent":["//For Development with react - local db\n// const WEB_URL = \"http://127.0.0.1:5050\" \n\n//For deployment with node - Compile EXE\nconst WEB_URL = \"\"\nexport default WEB_URL;","import React from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CForm,\n  CFormGroup,\n  CFormText,\n  CValidFeedback,\n  CInvalidFeedback,\n  CTextarea,\n  CInput,\n  CLabel,\n  CSelect\n} from '@coreui/react';\nimport WEB_URL from '../../contant/custom';\nimport CIcon from '@coreui/icons-react'\nimport moment from 'moment';\nimport { withAlert } from 'react-alert';\nimport { Link } from 'react-router-dom';\n\nvar curr = new Date();\nvar date = curr.toISOString().substr(0, 10);\nclass BasicForms extends React.Component {\n  // console.log(\"validity:nasjndjkn\", this.props.location.res.validity)\n  state = {\n    ticketNo: this.props.location.res == (null || undefined) ? \"\" : this.props.location.res.ticketNo,\n    startDate: this.props.location.res == (null || undefined) ? \"\" : this.props.location.res.startDate,\n    startDateValid: false,\n    startDateInvalid: false,\n\n    ticketType: this.props.location.res == (null || undefined) ? \"\" : this.props.location.res.ticketType,\n    ticketTypeArr: [],\n    ticketTypeValid: false,\n    ticketTypeInvalid: false,\n\n    bu: this.props.location.res == (null || undefined) ? \"\" : this.props.location.res.BUID,\n    buArr: [],\n    buValid: false,\n    buInvalid: false,\n    BUName: \"\",\n\n    BUName : this.props.location.res == (null || undefined) ? \"\" : this.props.location.res.BUName,\n\n    engineer: this.props.location.res == (null || undefined) ? \"\" : this.props.location.res.assignedMember,\n    engineerValid: false,\n    engineerInvalid: false,\n    userArr: [],\n\n    customerName: this.props.location.res == (null || undefined) ? \"\" : this.props.location.res.customerName,\n    customerValid: false,\n    customerInvalid: false,\n\n    customerAdd: this.props.location.res == (null || undefined) ? \"\" : this.props.location.res.customerAddress,\n    customerAddValid: false,\n    customerAddInvalid: false,\n\n    customerMob: this.props.location.res == (null || undefined) ? \"\" : this.props.location.res.customerMNo,\n    customerMobValid: false,\n    customerMobInvalid: false,\n\n    customerEmail: this.props.location.res == (null || undefined) ? \"\" : this.props.location.res.customerEmail,\n    customerEmailInvalid: false,\n    customerEmailValid: false,\n\n    customerRequest: this.props.location.res == (null || undefined) ? \"\" : this.props.location.res.customerComplain,\n    customerRequestValid: false,\n    customerRequestInvalid: false,\n\n    validity: this.props.location.res == (null || undefined) ? \"\" : this.props.location.res.isValid,\n    validityValid: false,\n    validityInvalid: false,\n\n    warrantyStatus: this.props.location.res == (null || undefined) ? \"\" : this.props.location.res.inWarranty,\n    warrantyStatusValid: false,\n    warrantyStatusInvalid: false,\n\n    statusOfTicket: this.props.location.ticketStatusExport == (null || undefined) ? \"\" : this.props.location.ticketStatusExport,\n    ticketStatus: [],\n    statusOfTicketValid: false,\n    statusOfTicketInvalid: false,\n    sendToBack: 0,\n\n    priority: this.props.location.res == (null || undefined) ? \"\" : this.props.location.res.priority,\n    priorityValid: false,\n    priorityInvalid: false,\n\n    dueDate: this.props.location.res == (null || undefined) ? \"\" : moment(this.props.location.res.dueDate).format(\"YYYY-MM-DD\"),\n    dueDateValid: false,\n    dueDateInvalid: false\n  }\n\n  componentDidMount() {\n    this.fetchBu();\n    this.fetchUser();\n    this.fetchDropDowns();\n    // console.log(\"PROPS OF ADMIN\", this.props)\n  }\n\n\n  /*Api Calls*/\n  dataRequest(URL, params) {\n    return fetch(WEB_URL + URL, {\n      method: 'POST',\n      'credentials': 'include',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(params)\n    })\n      .then(data => {\n        if (data.status == 401) {\n          this.props.history.push('/login');\n        }\n        else if (data.status == 403) {\n          this.props.history.push('/login');\n        }\n        return data.json()\n      })\n      .catch(err => {\n        // console.log(\"chartErr\", err)\n        return err\n      })\n  }\n\n  fetchBu = (e) => {\n    fetch(WEB_URL + \"/bu/fetch\")\n      .then(response => response.json())\n      .then(data => {\n        if ((data != null || data != undefined) && Array.isArray(data.data)) {\n          this.setState({\n            buArr: data.data\n          })\n        }\n      })\n      .catch(err => {\n        this.setState({\n          buArr: []\n        })\n      })\n  }\n\n  fetchUser = () => {\n    fetch(WEB_URL + \"/user/fetch?isTeamRep=1\")\n      .then(response => response.json())\n      .then(data => {\n        if ((data != null || data != undefined) && Array.isArray(data.data)) {\n          this.setState({\n            userArr: data.data\n          })\n        }\n      })\n      .catch(err => {\n        return err;\n      })\n  }\n\n  fetchDropDowns = () => {\n\n    fetch(WEB_URL + \"/types/tt\")\n      .then(response => response.json())\n      .then(data => {\n        if ((data != null || data != undefined) && Array.isArray(data.data)) {\n          this.setState({\n            ticketTypeArr: data.data\n          })\n        }\n      })\n      .catch(err => {\n        return err;\n      })\n\n    fetch(WEB_URL + \"/types/ts\")\n      .then(response => response.json())\n      .then(data => {\n        if ((data != null || data != undefined) && Array.isArray(data.data)) {\n          this.setState({\n            ticketStatus: data.data\n          })\n        }\n      })\n      .catch(err => {\n        return err;\n      })\n  }\n\n\n  handleStartDateChange = (e) => {\n    if (e.target.value != (\"\" || undefined)) {\n      this.setState({\n        startDate: e.target.value,\n        startDateValid: true,\n        startDateInvalid: false\n      })\n    }\n    else {\n      this.setState({\n        startDateInvalid: true,\n        startDateValid: false\n      })\n    }\n  }\n\n  handleQueryChange = (e) => {\n    console.log(\"Query Type -----\",e.target.value)\n    if (e.target.value != (\"\" && undefined) && e.target.value != \"Please select\") {\n      this.setState({\n        ticketType: e.target.value,\n        ticketTypeValid: true,\n        ticketTypeInvalid: false\n      })\n    }\n    else {\n      this.setState({\n        ticketType: \"\",\n        ticketTypeInvalid: true,\n        ticketTypeValid: false\n      })\n    }\n  }\n\n  handleBuChange = (e) => {\n    console.log(\"bu\", e ,e.target, e.target.value)\n    if (e.target.value != (\"\" && undefined) && e.target.value != \"Please select BU\") {\n      this.setState({\n        bu: e.target.value,\n        BUName: e.target.value.text,\n        buValid: true,\n        buInvalid: false\n      })\n    }\n    else {\n      this.setState({\n        bu: \"\",\n        BUName: \"\",\n        buValid: false,\n        buInvalid: true\n      })\n    }\n  }\n\n  handleEnggChange = (e) => {\n    if (e.target.value != (\"\" && undefined) && e.target.value != \"Please select Engineer\") {\n      this.setState({\n        engineer: e.target.value,\n        engineerValid: true,\n        engineerInvalid: false\n      })\n    }\n    else {\n      this.setState({\n        engineer: \"\",\n        engineerValid: false,\n        engineerInvalid: true\n      })\n    }\n  }\n\n  handleCustomerNameChange = (e) => {\n    var letters = /^[a-zA-Z-,]+(\\s{0,1}[a-zA-Z-, ])*$/;\n    if (e.target.value != \"\" && e.target.value != null && e.target.value.match(letters)) {\n      this.setState({\n        customerName: e.target.value,\n        customerValid: true,\n        customerInvalid: false\n      })\n    }\n    else {\n      this.setState({\n        customerName: e.target.value,\n        customerValid: false,\n        customerInvalid: true\n      })\n    }\n  }\n\n  handleCustomerAddChange = (e) => {\n    if (e.target.value != (\"\" && undefined)) {\n      this.setState({\n        customerAdd: e.target.value,\n        customerAddValid: true,\n        customerAddInvalid: false\n      })\n    }\n    else {\n      this.setState({\n        customerAdd: e.target.value,\n        customerAddValid: false,\n        customerAddInvalid: true\n      })\n    }\n  }\n\n  handleCustomerMobChange = (e) => {\n\n    var phoneno = /^\\+?([0-9]{2})\\)?[-. ]?([0-9]{4})[-. ]?([0-9]{4})$/;\n\n    if (e.target.value.match(phoneno)) {\n      this.setState({\n        customerMob: e.target.value,\n        customerMobValid: true,\n        customerMobInvalid: false\n      })\n    }\n    else {\n      this.setState({\n        customerMob: undefined,\n        customerMobInvalid: true,\n        customerMobValid: false\n      })\n    }\n  }\n\n  handleEmailChange = (e) => {\n    let filter = /^([a-zA-Z0-9_\\.\\-])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$/;\n\n    if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,15})+$/.test(e.target.value)) {\n      //console.log(\"inside email change\")\n      this.setState({\n        customerEmail: e.target.value,\n        customerEmailValid: true,\n        customerEmailInvalid: false\n      })\n    }\n    else {\n      //console.log(\"inside email change\", e.target.value)\n      this.setState({\n        customerEmail: e.target.value,\n        customerEmailInvalid: true,\n        customerEmailValid: false\n      })\n    }\n  }\n\n  handleComplain = (e) => {\n    // var letters = /^[a-zA-Z-0-9-,.]+(\\s{0,1}[a-zA-Z-0-9-,. ])*$/;\n    if (e.target.value != \"\" && e.target.value != null){ //&& e.target.value.match(letters)) {\n      this.setState({\n        customerRequest: e.target.value,\n        customerRequestInvalid: false,\n        customerRequestValid: true\n      })\n    }\n    else {\n      this.setState({\n        customerRequest: e.target.value,\n        customerRequestInvalid: true,\n        customerRequestValid: false\n      })\n    }\n  }\n\n  handleValidity = (e) => {\n    console.log(\"Validityyyy\", e.target.value, typeof(e.target.value))\n    if (e.target.value != (\"\" && undefined) && e.target.value !== \"Please select validity\") {\n      this.setState({\n        validity: e.target.value,\n        validityValid: true,\n        validityInvalid: false\n      })\n    }\n    else {\n      this.setState({\n        validity: \"\",\n        validityValid: false,\n        validityInvalid: true\n      })\n    }\n  }\n\n  handleWarrantyChange = (e) => {\n    if (e.target.value != (\"\" && undefined) && e.target.value !== \"Please select status\") {\n      this.setState({\n        warrantyStatus: e.target.value,\n        warrantyStatusInvalid: false,\n        warrantyStatusValid: true\n      })\n    }\n    else {\n      this.setState({\n        warrantyStatus: \"\",\n        warrantyStatusInvalid: true,\n        warrantyStatusValid: false\n      })\n    }\n  }\n\n  handleStatus = (e) => {\n    if (e.target.value != \"\" && e.target.value != \"Please select status\") {\n      let ticketStatus = 0;\n      if (e.target.value == \"Open\") {\n        ticketStatus = 1\n      }\n      else if (e.target.value == \"In Progress\") {\n        ticketStatus = 2\n      }\n      else if (e.target.value == \"On hold\") {\n        ticketStatus = 3\n      }\n      else if (e.target.value == \"Closed\") {\n        ticketStatus = 4\n      }\n      else if (e.target.value == \"Delayed\") {\n        ticketStatus = 5\n      }\n      this.setState({\n        sendToBack: ticketStatus,\n        statusOfTicket: e.target.value,\n        statusOfTicketValid: true,\n        statusOfTicketInvalid: false\n      })\n    }\n    else {\n      this.setState({\n        statusOfTicket: \"\",\n        statusOfTicketInvalid: true,\n        statusOfTicketValid: false\n      })\n    }\n  }\n\n\n  handlePriority = (e) => {\n    if (e.target.value != \"\" && e.target.value != \"Please Select Priority\") {\n      this.setState({\n        priority: e.target.value,\n        priorityValid: true,\n        priorityInvalid: false\n      })\n    }\n    else {\n      this.setState({\n        priorityValid: false,\n        priorityInvalid: true\n      })\n    }\n  }\n\n  handleDueDateChange = (e) => {\n    // console.log(\"due date\", e.target.value)\n    if (e.target.value !== (\"\" && undefined)) {\n      this.setState({\n        dueDate: e.target.value,\n        dueDateInvalid: false,\n        dueDateValid: true\n      })\n    }\n    else {\n      // console.log(\"inside else\")\n      this.setState({\n        dueDateInvalid: true,\n        dueDateValid: false\n      })\n    }\n  }\n\n  handleSubmit = () => {\n    const alert = this.props.alert;\n    console.log(\"state on submit\", this.state)\n    // console.log(this.state.ticketType != null,  \"&&\", this.state.ticketType != undefined,  \"&&\", this.state.ticketType != \"\",  \"&&\",\n    // this.state.bu != null,  \"&&\", this.state.bu != undefined,  \"&&\", this.state.bu != \"\",  \"&&\",\n    // this.state.customerName != null,  \"&&\", this.state.customerName != undefined,  \"&&\", this.state.customerName != \"\", \"&&\",\n    // this.state.customerAdd != null,  \"&&\", this.state.customerAdd != undefined,  \"&&\", this.state.customerAdd != \"\",  \"&&\",\n    // this.state.customerMob != null,  \"&&\", this.state.customerMob != undefined,  \"&&\", this.state.customerMob != \"\",  \"&&\",\n    // this.state.customerEmail != null,  \"&&\", this.state.customerEmail != undefined,  \"&&\", this.state.customerEmail != \"\",  \"&&\",\n    // this.state.customerRequest != null,  \"&&\", this.state.customerRequest != undefined,  \"&&\", this.state.customerRequest != \"\",  \"&&\",\n    // this.state.validity != null,  \"&&\", this.state.validity != undefined,  \"&&\",   \"&&\",\n    // this.state.warrantyStatus != null,  \"&&\", this.state.warrantyStatus != undefined,  \"&&\",   \"&&\",\n    // this.state.statusOfTicket != null,  \"&&\", this.state.statusOfTicket != undefined,  \"&&\", this.state.statusOfTicket != \"\",  \"&&\",\n    // this.state.dueDate != null,  \"&&\", this.state.dueDate != undefined,  \"&&\", this.state.dueDate != \"\" )\n    if (\n      this.state.ticketType != null && this.state.ticketType != undefined && this.state.ticketType != \"\" &&\n      this.state.bu != null && this.state.bu != undefined && this.state.bu != \"\" &&\n      this.state.customerName != null && this.state.customerName != undefined && this.state.customerName != \"\" &&\n      this.state.customerAdd != null && this.state.customerAdd != undefined && this.state.customerAdd != \"\" &&\n      this.state.customerMob != null && this.state.customerMob != undefined && this.state.customerMob != \"\" &&\n      this.state.customerEmail != null && this.state.customerEmail != undefined && this.state.customerEmail != \"\" &&\n      this.state.customerRequest != null && this.state.customerRequest != undefined && this.state.customerRequest != \"\" &&\n      this.state.validity != null && this.state.validity != undefined && \n      // this.state.validity != \"\" &&\n      this.state.warrantyStatus != null && this.state.warrantyStatus != undefined && \n      // this.state.warrantyStatus != \"\" &&\n      this.state.statusOfTicket != null && this.state.statusOfTicket != undefined && this.state.statusOfTicket != \"\" &&\n      this.state.dueDate != null && this.state.dueDate != undefined && this.state.dueDate != \"\" \n\n    ) {\n      console.log(\"in if condiu;skfnds;knfk;jn\")\n      let param = {}\n      param.ticketNo = parseInt(this.state.ticketNo);\n      param.ticketType = this.state.ticketType;\n      param.customerComplain = this.state.customerRequest;\n      param.customerEmail = this.state.customerEmail;\n      param.customerName = this.state.customerName;\n      param.customerAddress = this.state.customerAdd;\n      param.customerMNo = this.state.customerMob;\n      param.BUID = this.state.bu;\n      param.isValid = this.state.validity; // == \"Valid\" ? true : false;\n      console.log(\"vanknjancd\", param.isValid)\n      param.inWarranty = this.state.warrantyStatus; // == \"In Warranty\" ? true : false;\n      param.status = this.state.statusOfTicket;\n      param.dueDate = this.state.dueDate;\n      param.userType = \"Admin\";\n      param.BUName = this.state.BUName;\n      //assign parvam\n      this.dataRequest('/ticket/editTicket', param)\n        .then(data => {\n          if (data.message != undefined) {\n            alert.show(data.message);\n          }\n          else {\n            alert.show(\"Internal Server Error !\")\n          }\n        })\n        .catch(error => {\n          alert.show(\"Oops, Something went wrong!\")\n        })\n    }\n    else {\n      console.log(\"ye to else he\")\n      alert.show(\"Please fill all the required fields\")\n    }\n  }\n\n\n\n  handleReset = () => {\n    this.setState({\n      startDate: \"\",\n      startDateValid: false,\n      startDateInvalid: false,\n\n      ticketType: \"\",\n      ticketTypeValid: false,\n      ticketTypeInvalid: false,\n\n      bu: \"\",\n      BUName : \"\",\n      buValid: false,\n      buInvalid: false,\n\n      engineer: \"\",\n      engineerValid: false,\n      engineerInvalid: false,\n\n      customerName: \"\",\n      customerValid: false,\n      customerInvalid: false,\n\n      customerAdd: \"\",\n      customerAddValid: false,\n      customerAddInvalid: false,\n\n      customerMob: \"\",\n      customerMobValid: false,\n      customerMobInvalid: false,\n\n      customerEmail: \"\",\n      customerEmailInvalid: false,\n      customerEmailValid: false,\n\n      customerRequest: \"\",\n      customerRequestValid: false,\n      customerRequestInvalid: false,\n\n      validity: \"\",\n      validityValid: false,\n      validityInvalid: false,\n\n      warrantyStatus: \"\",\n      warrantyStatusValid: false,\n      warrantyStatusInvalid: false,\n\n      statusOfTicket: \"\",\n      statusOfTicketValid: false,\n      statusOfTicketInvalid: false,\n\n      priority: \"\",\n      priorityValid: false,\n      priorityInvalid: false,\n\n      dueDate: \"\",\n      dueDateValid: false,\n      dueDateInvalid: false\n    })\n  }\n\n\n  render() {\n    //reasons dropdown menu\n    let buArr = this.state.buArr;\n    //console.log(\"reason\", reason)\n    let optionItems = buArr.map((res, index) =>\n      <option key={res._id} value={res._id}>{res.BUName}</option>\n    );\n\n    let userArr = this.state.userArr;\n    let optionItems1 = userArr.map((res) =>\n      // console.log(\"users\",res, res._id, res.name)\n      <option key={res._id} value={res._id}>{res.name}</option>\n\n    )\n\n    let ticketTypeArr = this.state.ticketTypeArr;\n    let tickTypeArr = ticketTypeArr.map((res, index) =>\n      <option key={index} value={res}>{res}</option>\n    )\n\n    let ticketStatus = this.state.ticketStatus;\n    let ticketStatusArr = ticketStatus.map((res, index) =>\n      <option key={index} value={res}>{res}</option>\n    )\n    return (\n      <>\n        <CCard style={{ height: \"78vh\" }}>\n          <CCardHeader>\n            Add/Edit Ticket Form\n              </CCardHeader>\n          <CCardBody style={{ overflowY: \"scroll\" }}>\n            <CCol xs=\"3\">\n            {/* <span style= {{color: 'red'}}>* Required Field</span> */}\n            </CCol>\n            <CCol xs=\"7\">\n              <CForm action=\"\" method=\"post\" encType=\"multipart/form-data\" className=\"form-horizontal\">\n                {\n                  this.state.ticketNo != \"\"\n                    ?\n\n                    <CFormGroup row>\n                      <CCol md=\"3\">\n                        <CLabel htmlFor=\"text-input\">Ticket No:</CLabel>\n                      </CCol>\n                      <CCol xs=\"12\" md=\"9\">\n                        <CInput id=\"text-input\" name=\"text-input\" disabled value={this.state.ticketNo} placeholder=\"Text\" />\n                        <CFormText>You can not edit this</CFormText>\n                      </CCol>\n                    </CFormGroup>\n                    : null\n                }\n\n                {/* <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"date-input\">Start Date:</CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CInput\n                      type=\"date\"\n                      id=\"date-input\"\n                      name=\"date-input\"\n                      placeholder=\"date\"\n                      value={this.state.startDate}\n                      valid={this.state.startDateValid}\n                      invalid={this.state.startDateInvalid}\n                      onChange={e => this.handleStartDateChange(e)}\n                    />\n                    <CValidFeedback>Looks Good!</CValidFeedback>\n                    <CInvalidFeedback>This field is required!</CInvalidFeedback>\n                  </CCol>\n                </CFormGroup> */}\n\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"select\">Type Of Query<span style= {{color: 'red'}}>*</span></CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CSelect\n                      custom\n                      name=\"select\"\n                      id=\"select\"\n                      value={this.state.ticketType}\n                      valid={this.state.ticketTypeValid}\n                      invalid={this.state.ticketTypeInvalid}\n                      onChange={e => this.handleQueryChange(e)}\n                    >\n                      <option>Please select</option>\n                      {/* <option>{this.state.ticketType}</option> */}\n                      {/* <option>{this.state.ticketType != \"\" ? this.state.ticketType : \"Please select Query Type\"}</option> */}\n                      {tickTypeArr}\n                      {/* <option>Project</option>\n                      <option>Support</option> */}\n                    </CSelect>\n                    <CValidFeedback>Looks Good!</CValidFeedback>\n                    <CInvalidFeedback>This field is required!</CInvalidFeedback>\n                  </CCol>\n                </CFormGroup>\n\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"select1\">Business Unit<span style= {{color: 'red'}}>*</span></CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CSelect\n                      custom\n                      name=\"select1\"\n                      id=\"select1\"\n                      value={this.state.bu}\n                      valid={this.state.buValid}\n                      invalid={this.state.buInvalid}\n                      onChange={e => this.handleBuChange(e)}\n                    // onClick={this.fetchBu}\n                    >\n                      <option>Please select BU</option>\n                      {/* <option>{this.state.bu}</option> */}\n                      {/* <option>{this.state.bu != \"\" ? this.state.BUName : \"Please select BU\"}</option> */}\n                      {/* {console.log(\"bu\",this.state.bu)} */}\n                      {/* <option >PES</option>\n                      <option >ATE</option>\n                      <option >IIOT</option> */}\n                      {optionItems}\n                    </CSelect>\n                    <CValidFeedback>Looks Good!</CValidFeedback>\n                    <CInvalidFeedback>This field is required!</CInvalidFeedback>\n                  </CCol>\n                </CFormGroup>\n\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"email-input\">Customer Name<span style= {{color: 'red'}}>*</span></CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CInput\n                      type=\"text\"\n                      id=\"tex1-input\"\n                      name=\"text1-input\"\n                      placeholder=\"Enter Customer Name\"\n                      autoComplete=\"tex1\"\n                      value={this.state.customerName}\n                      valid={this.state.customerValid}\n                      invalid={this.state.customerInvalid}\n                      onChange={e => this.handleCustomerNameChange(e)}\n                    />\n                    <CValidFeedback>Looks Good!</CValidFeedback>\n                    <CInvalidFeedback>This field is required!</CInvalidFeedback>\n                  </CCol>\n                </CFormGroup>\n\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"textarea-input\">Customer Address<span style= {{color: 'red'}}>*</span></CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CTextarea\n                      name=\"textarea-input\"\n                      id=\"textarea-input\"\n                      rows=\"9\"\n                      placeholder=\"Enter Customer's Address...\"\n                      value={this.state.customerAdd}\n                      valid={this.state.customerAddValid}\n                      invalid={this.state.customerAddInvalid}\n                      onChange={e => this.handleCustomerAddChange(e)}\n                    />\n                    <CValidFeedback>Looks Good!</CValidFeedback>\n                    <CInvalidFeedback>This field is required!</CInvalidFeedback>\n                  </CCol>\n                </CFormGroup>\n\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"text-input\">Customer Mob. No<span style= {{color: 'red'}}>*</span></CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CInput\n                      type=\"number\"\n                      id=\"text-input\" name=\"text-input\"\n                      placeholder=\"Enter Mobile No\"\n                      autoComplete=\"new-text\"\n                      value={this.state.customerMob}\n\n                      valid={this.state.customerMobValid}\n                      invalid={this.state.customerMobInvalid}\n                      onChange={e => this.handleCustomerMobChange(e)}\n                    />\n                    {/* {console.log(\"mobNo\",this.state.customerMob)} */}\n                    <CValidFeedback>Looks Good!</CValidFeedback>\n                    <CInvalidFeedback>Please Enter Valid Number</CInvalidFeedback>\n                  </CCol>\n                </CFormGroup>\n\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"email-input\">Customer EmailID<span style= {{color: 'red'}}>*</span></CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CInput\n                      type=\"text\"\n                      id=\"email-input\" name=\"email-input\"\n                      placeholder=\"Enter Email Address\"\n                      autoComplete=\"email\"\n                      value={this.state.customerEmail}\n                      valid={this.state.customerEmailValid}\n                      invalid={this.state.customerEmailInvalid}\n                      onChange={e => this.handleEmailChange(e)}\n                    />\n                    <CValidFeedback>Looks Good!</CValidFeedback>\n                    <CInvalidFeedback>Please Enter Valid Email</CInvalidFeedback>\n                  </CCol>\n                </CFormGroup>\n\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"textarea-input\">Customer Complain<span style= {{color: 'red'}}>*</span></CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CTextarea\n                      name=\"textarea-input\"\n                      id=\"textarea-input\"\n                      rows=\"9\"\n                      placeholder=\"Content...\"\n                      value={this.state.customerRequest}\n                      valid={this.state.customerRequestValid}\n                      invalid={this.state.customerRequestInvalid}\n                      onChange={e => this.handleComplain(e)}\n                    />\n                    <CValidFeedback>Looks Good!</CValidFeedback>\n                    <CInvalidFeedback>This field is required!</CInvalidFeedback>\n                  </CCol>\n                </CFormGroup>\n\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"select\">Validity<span style= {{color: 'red'}}>*</span></CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CSelect\n                      custom\n                      name=\"select\"\n                      id=\"select\"\n                      value={this.state.validity}\n                      valid={this.state.validityValid}\n                      invalid={this.state.validityInvalid}\n                      onChange={this.handleValidity}\n                      //onChange={e => this.handleValidity(e)}\n                    >\n                      <option >Please select validity</option>\n                      <option value={true}>Valid</option>\n                      <option value={false}>Invalid</option>\n                    </CSelect>\n                    <CValidFeedback>Looks Good!</CValidFeedback>\n                    <CInvalidFeedback>This field is required!</CInvalidFeedback>\n                  </CCol>\n                </CFormGroup>\n\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"select\">Warranty Status<span style= {{color: 'red'}}>*</span></CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CSelect\n                      custom\n                      name=\"select\"\n                      id=\"select\"\n                      value={this.state.warrantyStatus}\n                      valid={this.state.warrantyStatusValid}\n                      invalid={this.state.warrantyStatusInvalid}\n                      onChange={e => this.handleWarrantyChange(e)}\n                    >\n                      {/* {\n                        this.state.warrantyStatus != \"\"\n                          ?\n                          <>\n                            <option >{this.state.warrantyStatus}</option>\n                            <option >{this.state.warrantyStatus == \"In Warranty\" ? \"Out Of Warranty\" : \"In Warranty\"}</option>\n                          </>\n                          :\n                          (<>\n                            <option>Please select status</option>\n                            <option>In Warranty</option>\n                            <option>Out Of Warranty</option></>)\n\n                      } */}\n                       <option>Please select status</option>\n                            <option value={true}>In Warranty</option>\n                            <option value={false}>Out Of Warranty</option>\n                    </CSelect>\n                    <CValidFeedback>Looks Good!</CValidFeedback>\n                    <CInvalidFeedback>This field is required!</CInvalidFeedback>\n                  </CCol>\n                </CFormGroup>\n\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"select\">Status Of Ticket<span style= {{color: 'red'}}>*</span></CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CSelect\n                      custom\n                      name=\"select\"\n                      id=\"select\"\n                      value={this.state.statusOfTicket}\n                      valid={this.state.statusOfTicketValid}\n                      invalid={this.state.statusOfTicketInvalid}\n                      onChange={e => this.handleStatus(e)}\n                    >\n                      <option >{this.state.statusOfTicket != \"\" ? this.state.statusOfTicket : \"Please select status\"}</option>\n                      {ticketStatusArr}\n                      {/* <option >Open</option>\n                      <option >In Progress</option>\n                      <option >On hold</option>\n                      <option >Closed</option>\n                      <option >Delayed</option> */}\n                    </CSelect>\n                    <CValidFeedback>Looks Good!</CValidFeedback>\n                    <CInvalidFeedback>This field is required!</CInvalidFeedback>\n                  </CCol>\n                </CFormGroup>\n\n                {/* <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"select\">Priority:</CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CSelect\n                      custom\n                      name=\"select\"\n                      id=\"select\"\n                      value={this.state.priority}\n                      valid={this.state.priorityValid}\n                      invalid={this.state.priorityInvalid}\n                      onChange={e => this.handlePriority(e)}\n                    >\n                      <option >High</option>\n                      <option >Medium</option>\n                      <option >Low</option>\n                    </CSelect>\n                    <CValidFeedback>Looks Good!</CValidFeedback>\n                    <CInvalidFeedback>This field is required!</CInvalidFeedback>\n                  </CCol>\n                </CFormGroup> */}\n\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"date-input\">Due Date<span style= {{color: 'red'}}>*</span></CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CInput\n                      type=\"date\"\n                      id=\"date-input\"\n                      name=\"date-input\"\n                      placeholder=\"date\"\n                      value={this.state.dueDate}\n                      valid={this.state.dueDateValid}\n                      invalid={this.state.dueDateInvalid}\n                      onChange={e => this.handleDueDateChange(e)}\n                      min={date}\n                    />\n                    <CValidFeedback>Looks Good!</CValidFeedback>\n                    <CInvalidFeedback>This field is required!</CInvalidFeedback>\n                  </CCol>\n                </CFormGroup>\n\n              </CForm>\n            </CCol>\n          </CCardBody>\n          <CCardFooter>\n\n            <CButton\n              type=\"submit\"\n              size=\"sm\" color=\"primary\" style={{ margin: \"3px\" }}\n              onClick={this.handleSubmit}\n            >\n              {/* <CIcon name=\"cil-scrubber\" /> */}\n                  Submit\n            </CButton>\n\n            <CButton\n              type=\"reset\"\n              size=\"sm\" color=\"danger\" style={{ margin: \"3px\" }}\n              onClick={this.handleReset}\n            >\n              {/* <CIcon name=\"cil-ban\" /> */}\n                    Reset\n            </CButton>\n            <Link to=\"/ticketTable\">\n              <CButton\n                size=\"sm\" color=\"dark\" style={{ margin: \"3px\" }}\n               // href=\"/src/dashboard/Bumanagement#/ticketTable\"\n              >\n                Back\n            </CButton>\n            </Link>\n          </CCardFooter>\n        </CCard>\n      </>\n    )\n  }\n}\n\nexport default withAlert()(BasicForms);"],"sourceRoot":""}