{"version":3,"sources":["contant/custom.js","dashboard/Forms/adminAddForm.js"],"names":["WEB_URL","date","Date","toISOString","substr","BasicForms","state","ticketNo","undefined","props","location","res","startDate","startDateValid","startDateInvalid","ticketType","ticketTypeArr","ticketTypeValid","ticketTypeInvalid","bu","BUName","buArr","buValid","buInvalid","engineer","assignedMember","engineerValid","engineerInvalid","userArr","customerName","customerValid","customerInvalid","customerAdd","customerAddress","customerAddValid","customerAddInvalid","customerMob","customerMNo","customerMobValid","customerMobInvalid","customerEmail","customerEmailInvalid","customerEmailValid","customerRequest","customerComplain","customerRequestValid","customerRequestInvalid","validity","isValid","validityValid","validityInvalid","warrantyStatus","inWarranty","warrantyStatusValid","warrantyStatusInvalid","statusOfTicket","ticketStatusExport","ticketStatus","statusOfTicketValid","statusOfTicketInvalid","sendToBack","priority","priorityValid","priorityInvalid","dueDate","moment","format","dueDateValid","dueDateInvalid","fetchBu","e","fetch","then","response","json","data","Array","isArray","setState","catch","err","fetchUser","fetchDropDowns","handleStartDateChange","target","value","handleQueryChange","handleBuChange","console","log","handleEnggChange","handleCustomerNameChange","match","handleCustomerAddChange","handleCustomerMobChange","handleEmailChange","test","handleComplain","handleValidity","handleWarrantyChange","handleStatus","handlePriority","handleDueDateChange","handleSubmit","alert","param","BUID","status","userType","dataRequest","message","show","error","handleReset","this","URL","params","method","headers","body","JSON","stringify","history","push","optionItems","map","index","key","_id","tickTypeArr","name","ticketStatusArr","style","height","overflowY","xs","action","encType","className","row","md","htmlFor","id","disabled","placeholder","color","custom","valid","invalid","onChange","type","autoComplete","rows","min","size","margin","onClick","to","React","Component","withAlert"],"mappings":"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","file":"static/js/15.36430ca5.chunk.js","sourcesContent":["//For Development with react - local db\n// const WEB_URL = \"http://127.0.0.1:5050\" \n\n//For deployment with node - Compile EXE\nconst WEB_URL = \"\"\nexport default WEB_URL;","import React from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CForm,\n  CFormGroup,\n  CFormText,\n  CValidFeedback,\n  CInvalidFeedback,\n  CTextarea,\n  CInput,\n  CLabel,\n  CSelect\n} from '@coreui/react';\nimport WEB_URL from '../../contant/custom';\nimport CIcon from '@coreui/icons-react'\nimport moment from 'moment';\nimport { withAlert } from 'react-alert';\nimport { Link } from 'react-router-dom';\nimport './form.css';\n\nvar curr = new Date();\nvar date = curr.toISOString().substr(0, 10);\nclass BasicForms extends React.Component {\n\n  state = {\n    ticketNo: this.props.location.res == (null || undefined) ? \"\" : this.props.location.res.ticketNo,\n    startDate: this.props.location.res == (null || undefined) ? \"\" : this.props.location.res.startDate,\n    startDateValid: false,\n    startDateInvalid: false,\n\n    ticketType: this.props.location.res == (null || undefined) ? \"\" : this.props.location.res.ticketType,\n    ticketTypeArr: [],\n    ticketTypeValid: false,\n    ticketTypeInvalid: false,\n\n    bu: this.props.location.res == (null || undefined) ? \"\" : this.props.location.res.BUName,\n    buArr: [],\n    buValid: false,\n    buInvalid: false,\n    BUName: \"\",\n\n    engineer: this.props.location.res == (null || undefined) ? \"\" : this.props.location.res.assignedMember,\n    engineerValid: false,\n    engineerInvalid: false,\n    userArr: [],\n\n    customerName: this.props.location.res == (null || undefined) ? \"\" : this.props.location.res.customerName,\n    customerValid: false,\n    customerInvalid: false,\n\n    customerAdd: this.props.location.res == (null || undefined) ? \"\" : this.props.location.res.customerAddress,\n    customerAddValid: false,\n    customerAddInvalid: false,\n\n    customerMob: this.props.location.res == (null || undefined) ? \"\" : this.props.location.res.customerMNo,\n    customerMobValid: false,\n    customerMobInvalid: false,\n\n    customerEmail: this.props.location.res == (null || undefined) ? \"\" : this.props.location.res.customerEmail,\n    customerEmailInvalid: false,\n    customerEmailValid: false,\n\n    customerRequest: this.props.location.res == (null || undefined) ? \"\" : this.props.location.res.customerComplain,\n    customerRequestValid: false,\n    customerRequestInvalid: false,\n\n    validity: this.props.location.res == (null || undefined) ? \"\" : this.props.location.res.isValid,\n    validityValid: false,\n    validityInvalid: false,\n\n    warrantyStatus: this.props.location.res == (null || undefined) ? \"\" : this.props.location.res.inWarranty,\n    warrantyStatusValid: false,\n    warrantyStatusInvalid: false,\n\n    statusOfTicket: this.props.location.ticketStatusExport == (null || undefined) ? \"\" : this.props.location.ticketStatusExport,\n    ticketStatus: [],\n    statusOfTicketValid: false,\n    statusOfTicketInvalid: false,\n    sendToBack: 0,\n\n    priority: this.props.location.res == (null || undefined) ? \"\" : this.props.location.res.priority,\n    priorityValid: false,\n    priorityInvalid: false,\n\n    dueDate: this.props.location.res == (null || undefined) ? \"\" : moment(this.props.location.res.dueDate).format(\"YYYY-MM-DD\"),\n    dueDateValid: false,\n    dueDateInvalid: false\n  }\n\n  componentDidMount() {\n    this.fetchBu();\n    this.fetchUser();\n    this.fetchDropDowns();\n    // console.log(\"PROPS OF ADMIN\", this.props)\n  }\n\n\n  /*Api Calls*/\n  dataRequest(URL, params) {\n    return fetch(WEB_URL + URL, {\n      method: 'POST',\n      'credentials': 'include',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(params)\n    })\n      .then(data => {\n        if (data.status == 401) {\n          this.props.history.push('/login');\n        }\n        else if (data.status == 403) {\n          this.props.history.push('/login');\n        }\n        return data.json()\n      })\n      .catch(err => {\n        // console.log(\"chartErr\", err)\n        return err\n      })\n  }\n\n  fetchBu = (e) => {\n    fetch(WEB_URL + \"/bu/fetch\")\n      .then(response => response.json())\n      .then(data => {\n        if ((data != null || data != undefined) && Array.isArray(data.data)) {\n          this.setState({\n            buArr: data.data\n          })\n        }\n      })\n      .catch(err => {\n        this.setState({\n          buArr: []\n        })\n      })\n  }\n\n  fetchUser = () => {\n    fetch(WEB_URL + \"/user/fetch?isTeamRep=1\")\n      .then(response => response.json())\n      .then(data => {\n        if ((data != null || data != undefined) && Array.isArray(data.data)) {\n          this.setState({\n            userArr: data.data\n          })\n        }\n      })\n      .catch(err => {\n        return err;\n      })\n  }\n\n  fetchDropDowns = () => {\n\n    fetch(WEB_URL + \"/types/tt\")\n      .then(response => response.json())\n      .then(data => {\n        if ((data != null || data != undefined) && Array.isArray(data.data)) {\n          this.setState({\n            ticketTypeArr: data.data\n          })\n        }\n      })\n      .catch(err => {\n        return err;\n      })\n\n    fetch(WEB_URL + \"/types/ts\")\n      .then(response => response.json())\n      .then(data => {\n        if ((data != null || data != undefined) && Array.isArray(data.data)) {\n          this.setState({\n            ticketStatus: data.data\n          })\n        }\n      })\n      .catch(err => {\n        return err;\n      })\n  }\n\n\n  handleStartDateChange = (e) => {\n    if (e.target.value != (\"\" || undefined)) {\n      this.setState({\n        startDate: e.target.value,\n        startDateValid: true,\n        startDateInvalid: false\n      })\n    }\n    else {\n      this.setState({\n        startDateInvalid: true,\n        startDateValid: false\n      })\n    }\n  }\n\n  handleQueryChange = (e) => {\n    if (e.target.value != (\"\" && undefined) && e.target.value != \"Please select\") {\n      this.setState({\n        ticketType: e.target.value,\n        ticketTypeValid: true,\n        ticketTypeInvalid: false\n      })\n    }\n    else {\n      this.setState({\n        ticketType: \"\",\n        ticketTypeInvalid: true,\n        ticketTypeValid: false\n      })\n    }\n  }\n\n  handleBuChange = (e) => {\n    console.log(\"option value\", e.target.value, e.target, \"askjnj\")\n    if (e.target.value != (\"\" && undefined) && e.target.value != \"Please select BU\") {\n      this.setState({\n        bu: e.target.value,\n        BUName: e.target.value,\n        buValid: true,\n        buInvalid: false\n      })\n    }\n    else {\n      this.setState({\n        bu: \"\",\n        buValid: false,\n        buInvalid: true\n      })\n    }\n  }\n\n  handleEnggChange = (e) => {\n    if (e.target.value != (\"\" && undefined) && e.target.value != \"Please select Engineer\") {\n      this.setState({\n        engineer: e.target.value,\n        engineerValid: true,\n        engineerInvalid: false\n      })\n    }\n    else {\n      this.setState({\n        engineer: \"\",\n        engineerValid: false,\n        engineerInvalid: true\n      })\n    }\n  }\n\n  handleCustomerNameChange = (e) => {\n    var letters = /^[a-zA-Z-,]+(\\s{0,1}[a-zA-Z-, ])*$/;\n    if (e.target.value != \"\" && e.target.value != null && e.target.value.match(letters)) {\n      this.setState({\n        customerName: e.target.value,\n        customerValid: true,\n        customerInvalid: false\n      })\n    }\n    else {\n      this.setState({\n        customerName: e.target.value,\n        customerValid: false,\n        customerInvalid: true\n      })\n    }\n  }\n\n  handleCustomerAddChange = (e) => {\n    if (e.target.value != (\"\" && undefined)) {\n      this.setState({\n        customerAdd: e.target.value,\n        customerAddValid: true,\n        customerAddInvalid: false\n      })\n    }\n    else {\n      this.setState({\n        customerAdd: e.target.value,\n        customerAddValid: false,\n        customerAddInvalid: true\n      })\n    }\n  }\n\n  handleCustomerMobChange = (e) => {\n\n    var phoneno = /^\\+?([0-9]{2})\\)?[-. ]?([0-9]{4})[-. ]?([0-9]{4})$/;\n\n    if (e.target.value.match(phoneno)) {\n      this.setState({\n        customerMob: e.target.value,\n        customerMobValid: true,\n        customerMobInvalid: false\n      })\n    }\n    else {\n      this.setState({\n        customerMob: undefined,\n        customerMobInvalid: true,\n        customerMobValid: false\n      })\n    }\n  }\n\n  handleEmailChange = (e) => {\n    let filter = /^([a-zA-Z0-9_\\.\\-])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$/;\n\n    if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,15})+$/.test(e.target.value)) {\n      //console.log(\"inside email change\")\n      this.setState({\n        customerEmail: e.target.value,\n        customerEmailValid: true,\n        customerEmailInvalid: false\n      })\n    }\n    else {\n      //console.log(\"inside email change\", e.target.value)\n      this.setState({\n        customerEmail: e.target.value,\n        customerEmailInvalid: true,\n        customerEmailValid: false\n      })\n    }\n  }\n\n  handleComplain = (e) => {\n    // var letters = /^[a-zA-Z-,.]+(\\s{0,1}[a-zA-Z-,. ])*$/;\n    if (e.target.value != \"\" && e.target.value != null){ // && e.target.value.match(letters)) {\n      this.setState({\n        customerRequest: e.target.value,\n        customerRequestInvalid: false,\n        customerRequestValid: true\n      })\n    }\n    else {\n      this.setState({\n        customerRequest: e.target.value,\n        customerRequestInvalid: true,\n        customerRequestValid: false\n      })\n    }\n  }\n\n  handleValidity = (e) => {\n    if (e.target.value != (\"\" && undefined) && e.target.value !== \"Please select validity\") {\n      this.setState({\n        validity: e.target.value,\n        validityValid: true,\n        validityInvalid: false\n      })\n    }\n    else {\n      this.setState({\n        validity: \"\",\n        validityValid: false,\n        validityInvalid: true\n      })\n    }\n  }\n\n  handleWarrantyChange = (e) => {\n    if (e.target.value != (\"\" && undefined) && e.target.value !== \"Please select status\") {\n      this.setState({\n        warrantyStatus: e.target.value,\n        warrantyStatusInvalid: false,\n        warrantyStatusValid: true\n      })\n    }\n    else {\n      this.setState({\n        warrantyStatus: \"\",\n        warrantyStatusInvalid: true,\n        warrantyStatusValid: false\n      })\n    }\n  }\n\n  handleStatus = (e) => {\n    if (e.target.value != \"\" && e.target.value != \"Please select status\") {\n      let ticketStatus = 0;\n      if (e.target.value == \"Open\") {\n        ticketStatus = 1\n      }\n      else if (e.target.value == \"In Progress\") {\n        ticketStatus = 2\n      }\n      else if (e.target.value == \"On hold\") {\n        ticketStatus = 3\n      }\n      else if (e.target.value == \"Closed\") {\n        ticketStatus = 4\n      }\n      else if (e.target.value == \"Delayed\") {\n        ticketStatus = 5\n      }\n      this.setState({\n        sendToBack: ticketStatus,\n        statusOfTicket: e.target.value,\n        statusOfTicketValid: true,\n        statusOfTicketInvalid: false\n      })\n    }\n    else {\n      this.setState({\n        statusOfTicket: \"\",\n        statusOfTicketInvalid: true,\n        statusOfTicketValid: false\n      })\n    }\n  }\n\n\n  handlePriority = (e) => {\n    if (e.target.value != \"\" && e.target.value != \"Please Select Priority\") {\n      this.setState({\n        priority: e.target.value,\n        priorityValid: true,\n        priorityInvalid: false\n      })\n    }\n    else {\n      this.setState({\n        priorityValid: false,\n        priorityInvalid: true\n      })\n    }\n  }\n\n  handleDueDateChange = (e) => {\n    // console.log(\"due date\", e.target.value)\n    if (e.target.value !== (\"\" && undefined)) {\n      this.setState({\n        dueDate: e.target.value,\n        dueDateInvalid: false,\n        dueDateValid: true\n      })\n    }\n    else {\n      // console.log(\"inside else\")\n      this.setState({\n        dueDateInvalid: true,\n        dueDateValid: false\n      })\n    }\n  }\n\n  handleSubmit = () => {\n    const alert = this.props.alert;\n    if (\n      this.state.customerEmail != \"\" &&\n      this.state.ticketType != \"\" &&\n      this.state.validity != \"\" &&\n      this.state.warrantyStatus != \"\" &&\n      this.state.statusOfTicket != \"\" &&\n      this.state.customerName != \"\" &&\n      this.state.customerAdd != \"\" &&\n      this.state.bu != \"\" &&\n      //   this.state.engineer != \"\" &&\n      this.state.customerMob != \"\" &&\n      this.state.customerRequest != \"\" &&\n      this.state.dueDate != \"\"\n    ) {\n      let param = {}\n      param.ticketType = this.state.ticketType;\n      param.customerComplain = this.state.customerRequest;\n      param.ticketNo = this.state.ticketNo;\n      param.customerEmail = this.state.customerEmail;\n      param.customerName = this.state.customerName;\n      param.customerAddress = this.state.customerAdd;\n      param.customerMNo = this.state.customerMob;\n      param.BUID = this.state.bu;\n      param.isValid = this.state.validity == \"Valid\" ? true : false;\n      param.inWarranty = this.state.warrantyStatus == \"In Warranty\" ? true : false;\n      param.status = this.state.statusOfTicket;\n      param.dueDate = this.state.dueDate;\n      param.userType = \"Admin\";\n      //assign parvam\n      this.dataRequest('/ticket/addTicket', param)\n        .then(data => {\n          if (data.message != undefined) {\n            alert.show(data.message);\n          }\n          else {\n            alert.show(\"Internal Server Error !\")\n          }\n        })\n        .catch(error => {\n          alert.show(\"Oops, Something went wrong!\")\n        })\n    }\n    else {\n      this.setState({\n        startDateValid: this.state.startDateValid === true ? this.state.startDateValid : false,\n        startDateInvalid: this.state.startDateValid == true ? false : true,\n\n        ticketTypeValid: this.state.ticketTypeValid === true ? this.state.ticketType : false,\n        ticketTypeInvalid: this.state.ticketTypeValid === true ? false : true,\n\n        buValid: this.state.buValid === true ? this.state.buValid : false,\n        buInvalid: this.state.buValid === true ? false : true,\n\n        engineerValid: this.state.engineerValid === true ? this.state.engineerValid : false,\n        engineerInvalid: this.state.engineerValid === true ? false : true,\n\n        customerValid: this.state.customerValid === true ? this.state.customerValid : false,\n        customerInvalid: this.state.customerValid === true ? false : true,\n\n        customerAddValid: this.state.customerAddValid === true ? this.state.customerAddValid :false,\n        customerAddInvalid: this.state.customerAddValid === true ? false: true,\n\n        customerMobValid: this.state.customerMobValid === true ? this.state.customerMobValid : false,\n        customerMobInvalid: this.state.customerMobValid === true ? false : true,\n\n        customerEmailInvalid: this.state.customerEmailValid === true ? false : true,\n        customerEmailValid: this.state.customerEmailValid === true ? this.state.customerEmailValid : false,\n\n        customerRequestValid: this.state.customerRequestValid === true ? this.state.customerRequestValid : false,\n        customerRequestInvalid: this.state.customerRequestValid === true ? false : true,\n\n        validityValid: this.state.validityValid === true ? this.state.validityValid : false,\n        validityInvalid: this.state.validityValid === true ? false : true,\n\n        warrantyStatusValid: this.state.warrantyStatusValid === true ? this.state.warrantyStatusValid : false,\n        warrantyStatusInvalid: this.state.warrantyStatusValid === true ? false : true,\n\n        statusOfTicketValid: this.state.statusOfTicketValid === true ? this.state.statusOfTicketValid : false,\n        statusOfTicketInvalid: this.state.statusOfTicketValid === true ? false : true,\n\n        priorityValid: this.state.priorityValid === true ? this.state.priorityValid : false,\n        priorityInvalid: this.state.priorityValid === true ? false : true,\n\n        dueDateValid: this.state.dueDateValid === true ? this.state.dueDateValid : false,\n        dueDateInvalid: this.state.dueDateValid === true ? false : true,\n\n\n      })\n    }\n  }\n\n\n\n  handleReset = () => {\n    console.log(\"reset callled \")\n    this.setState({\n      startDate: \"\",\n      startDateValid: false,\n      startDateInvalid: false,\n\n      ticketType: \"\",\n      ticketTypeValid: false,\n      ticketTypeInvalid: false,\n\n      bu: \"\",\n      BUName : \"\",\n      buValid: false,\n      buInvalid: false,\n\n      engineer: \"\",\n      engineerValid: false,\n      engineerInvalid: false,\n\n      customerName: \"\",\n      customerValid: false,\n      customerInvalid: false,\n\n      customerAdd: \"\",\n      customerAddValid: false,\n      customerAddInvalid: false,\n\n      customerMob: \"\",\n      customerMobValid: false,\n      customerMobInvalid: false,\n\n      customerEmail: \"\",\n      customerEmailInvalid: false,\n      customerEmailValid: false,\n\n      customerRequest: \"\",\n      customerRequestValid: false,\n      customerRequestInvalid: false,\n\n      validity: \"\",\n      validityValid: false,\n      validityInvalid: false,\n\n      warrantyStatus: \"\",\n      warrantyStatusValid: false,\n      warrantyStatusInvalid: false,\n\n      statusOfTicket: \"\",\n      statusOfTicketValid: false,\n      statusOfTicketInvalid: false,\n\n      priority: \"\",\n      priorityValid: false,\n      priorityInvalid: false,\n\n      dueDate: \"\",\n      dueDateValid: false,\n      dueDateInvalid: false\n    }, ()=> {\n      console.log(\"reset state updated\")\n    })\n  }\n\n\n  render() {\n    //reasons dropdown menu\n    let buArr = this.state.buArr;\n    //console.log(\"reason\", reason)\n    let optionItems = buArr.map((res, index) =>\n      <option key={res._id} value={res._id}>{res.BUName}</option>\n    );\n\n    let userArr = this.state.userArr;\n    let optionItems1 = userArr.map((res) =>\n      // console.log(\"users\",res, res._id, res.name)\n      <option key={res._id} value={res._id}>{res.name}</option>\n\n    )\n\n    let ticketTypeArr = this.state.ticketTypeArr;\n    let tickTypeArr = ticketTypeArr.map((res, index) =>\n      <option key={index} value={res}>{res}</option>\n    )\n\n    let ticketStatus = this.state.ticketStatus;\n    let ticketStatusArr = ticketStatus.map((res, index) =>\n      <option key={index} value={res}>{res}</option>\n    )\n    return (\n      <>\n        <CCard style={{ height: \"78vh\" }}>\n          <CCardHeader>\n            Add Ticket Form\n              </CCardHeader>\n          <CCardBody style={{ overflowY: \"scroll\" }}>\n            <CCol xs=\"3\">\n\n            </CCol>\n            <CCol xs=\"7\">\n              <CForm action=\"\" method=\"post\" encType=\"multipart/form-data\" className=\"form-horizontal\">\n                {\n                  this.state.ticketNo != \"\"\n                    ?\n\n                    <CFormGroup row>\n                      <CCol md=\"3\">\n                        <CLabel htmlFor=\"text-input\">Ticket No:</CLabel>\n                      </CCol>\n                      <CCol xs=\"12\" md=\"9\">\n                        <CInput id=\"text-input\" name=\"text-input\" disabled value={this.state.ticketNo} placeholder=\"Text\" />\n                        <CFormText>You can not edit this</CFormText>\n                      </CCol>\n                    </CFormGroup>\n                    : null\n                }\n\n                {/* <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"date-input\">Start Date:</CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CInput\n                      type=\"date\"\n                      id=\"date-input\"\n                      name=\"date-input\"\n                      placeholder=\"date\"\n                      value={this.state.startDate}\n                      valid={this.state.startDateValid}\n                      invalid={this.state.startDateInvalid}\n                      onChange={e => this.handleStartDateChange(e)}\n                    />\n                    <CValidFeedback>Looks Good!</CValidFeedback>\n                    <CInvalidFeedback>This field is required!</CInvalidFeedback>\n                  </CCol>\n                </CFormGroup> */}\n\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"select\">Type Of Query<span style= {{color: 'red'}}>*</span></CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CSelect\n                      custom\n                      name=\"select\"\n                      id=\"select\"\n                      value={this.state.ticketType}\n                      valid={this.state.ticketTypeValid}\n                      invalid={this.state.ticketTypeInvalid}\n                      onChange={e => this.handleQueryChange(e)}\n                    >\n                      <option>Please select</option>\n                      {tickTypeArr}\n                      {/* <option>Project</option>\n                      <option>Support</option> */}\n                    </CSelect>\n                    <CValidFeedback>Looks Good!</CValidFeedback>\n                    <CInvalidFeedback>This field is required!</CInvalidFeedback>\n                  </CCol>\n                </CFormGroup>\n\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"select\">Business Unit<span style= {{color: 'red'}}>*</span></CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CSelect\n                      custom\n                      name=\"select\"\n                      id=\"select\"\n                      value={this.state.bu}\n                      valid={this.state.buValid}\n                      invalid={this.state.buInvalid}\n                      onChange={e => this.handleBuChange(e)}\n                    // onClick={this.fetchBu}\n                    >\n                      <option>Please select BU</option>\n                      \n                      {/* {console.log(\"bu\",this.state.bu)} */}\n                      {/* <option >PES</option>\n                      <option >ATE</option>\n                      <option >IIOT</option> */}\n                      {optionItems}\n                    </CSelect>\n                    <CValidFeedback>Looks Good!</CValidFeedback>\n                    <CInvalidFeedback>This field is required!</CInvalidFeedback>\n                  </CCol>\n                </CFormGroup>\n\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"email-input\" className=\"control-label\">Customer Name<span style= {{color: 'red'}}>*</span></CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CInput\n                      className=\"form-group required\"\n                      type=\"text\"\n                      id=\"tex1-input\"\n                      name=\"text1-input\"\n                      placeholder=\"Enter Customer Name\"\n                      autoComplete=\"tex1\"\n                      value={this.state.customerName}\n                      valid={this.state.customerValid}\n                      invalid={this.state.customerInvalid}\n                      onChange={e => this.handleCustomerNameChange(e)}\n                    />\n                    <CValidFeedback>Looks Good!</CValidFeedback>\n                    <CInvalidFeedback>Enter Valid Input!</CInvalidFeedback>\n                  </CCol>\n                </CFormGroup>\n\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"textarea-input\">Customer Address<span style= {{color: 'red'}}>*</span></CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CTextarea\n                      name=\"textarea-input\"\n                      id=\"textarea-input\"\n                      rows=\"9\"\n                      placeholder=\"Enter Customer's Address...\"\n                      value={this.state.customerAdd}\n                      valid={this.state.customerAddValid}\n                      invalid={this.state.customerAddInvalid}\n                      onChange={e => this.handleCustomerAddChange(e)}\n                    />\n                    <CValidFeedback>Looks Good!</CValidFeedback>\n                    <CInvalidFeedback>Enter Valid Input!</CInvalidFeedback>\n                  </CCol>\n                </CFormGroup>\n\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"text-input\">Customer Mob. No<span style= {{color: 'red'}}>*</span></CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CInput\n                      type=\"text\"\n                      id=\"text-input\" name=\"text-input\"\n                      placeholder=\"Enter Mobile No\"\n                      autoComplete=\"new-text\"\n                      value={this.state.customerMob}\n\n                      valid={this.state.customerMobValid}\n                      invalid={this.state.customerMobInvalid}\n                      onChange={e => this.handleCustomerMobChange(e)}\n                    />\n                    {/* {console.log(\"mobNo\",this.state.customerMob)} */}\n                    <CValidFeedback>Looks Good!</CValidFeedback>\n                    <CInvalidFeedback>Please Enter Valid Number</CInvalidFeedback>\n                  </CCol>\n                </CFormGroup>\n\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"email-input\">Customer EmailID<span style= {{color: 'red'}}>*</span></CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CInput\n                      type=\"text\"\n                      id=\"email-input\" name=\"email-input\"\n                      placeholder=\"Enter Email Address\"\n                      autoComplete=\"email\"\n                      value={this.state.customerEmail}\n                      valid={this.state.customerEmailValid}\n                      invalid={this.state.customerEmailInvalid}\n                      onChange={e => this.handleEmailChange(e)}\n                    />\n                    <CValidFeedback>Looks Good!</CValidFeedback>\n                    <CInvalidFeedback>Please Enter Valid Email</CInvalidFeedback>\n                  </CCol>\n                </CFormGroup>\n\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"textarea-input\">Customer Complain<span style= {{color: 'red'}}>*</span></CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CTextarea\n                      name=\"textarea-input\"\n                      id=\"textarea-input\"\n                      rows=\"9\"\n                      placeholder=\"Enter Customer's Complain...\"\n                      value={this.state.customerRequest}\n                      valid={this.state.customerRequestValid}\n                      invalid={this.state.customerRequestInvalid}\n                      onChange={e => this.handleComplain(e)}\n                    />\n                    <CValidFeedback>Looks Good!</CValidFeedback>\n                    <CInvalidFeedback>Enter Valid Input!</CInvalidFeedback>\n                  </CCol>\n                </CFormGroup>\n\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"select\">Validity<span style= {{color: 'red'}}>*</span></CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CSelect\n                      custom\n                      name=\"select\"\n                      id=\"select\"\n                      value={this.state.validity}\n                      valid={this.state.validityValid}\n                      invalid={this.state.validityInvalid}\n                      onChange={e => this.handleValidity(e)}\n                    >\n                      <option >Please select validity</option>\n                      <option >Valid</option>\n                      <option >Invalid</option>\n                    </CSelect>\n                    <CValidFeedback>Looks Good!</CValidFeedback>\n                    <CInvalidFeedback>This field is required!</CInvalidFeedback>\n                  </CCol>\n                </CFormGroup>\n\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"select\">Warranty Status<span style= {{color: 'red'}}>*</span></CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CSelect\n                      custom\n                      name=\"select\"\n                      id=\"select\"\n                      value={this.state.warrantyStatus}\n                      valid={this.state.warrantyStatusValid}\n                      invalid={this.state.warrantyStatusInvalid}\n                      onChange={e => this.handleWarrantyChange(e)}\n                    >\n                      {\n                        this.state.warrantyStatus != \"\"\n                          ?\n                          <>\n                            {/* {console.log(\"warrnt\", this.state.warrantyStatus)} */}\n                            <option >{this.state.warrantyStatus}</option>\n                            <option >{this.state.warrantyStatus == \"In Warranty\" ? \"Out Of Warranty\" : \"In Warranty\"}</option>\n                          </>\n                          :\n                          (<>\n                            <option>Please select status</option>\n                            <option>In Warranty</option>\n                            <option>Out Of Warranty</option></>)\n\n                      }\n                    </CSelect>\n                    <CValidFeedback>Looks Good!</CValidFeedback>\n                    <CInvalidFeedback>This field is required!</CInvalidFeedback>\n                  </CCol>\n                </CFormGroup>\n\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"select\">Status Of Ticket<span style= {{color: 'red'}}>*</span></CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CSelect\n                      custom\n                      name=\"select\"\n                      id=\"select\"\n                      value={this.state.statusOfTicket}\n                      valid={this.state.statusOfTicketValid}\n                      invalid={this.state.statusOfTicketInvalid}\n                      onChange={e => this.handleStatus(e)}\n                    >\n                      <option >{this.state.statusOfTicket != \"\" ? this.state.statusOfTicket : \"Please select status\"}</option>\n                      {ticketStatusArr}\n                      {/* <option >Open</option>\n                      <option >In Progress</option>\n                      <option >On hold</option>\n                      <option >Closed</option>\n                      <option >Delayed</option> */}\n                    </CSelect>\n                    <CValidFeedback>Looks Good!</CValidFeedback>\n                    <CInvalidFeedback>This field is required!</CInvalidFeedback>\n                  </CCol>\n                </CFormGroup>\n\n                {/* <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"select\">Priority:</CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CSelect\n                      custom\n                      name=\"select\"\n                      id=\"select\"\n                      value={this.state.priority}\n                      valid={this.state.priorityValid}\n                      invalid={this.state.priorityInvalid}\n                      onChange={e => this.handlePriority(e)}\n                    >\n                      <option >High</option>\n                      <option >Medium</option>\n                      <option >Low</option>\n                    </CSelect>\n                    <CValidFeedback>Looks Good!</CValidFeedback>\n                    <CInvalidFeedback>This field is required!</CInvalidFeedback>\n                  </CCol>\n                </CFormGroup> */}\n\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"date-input\">Due Date<span style= {{color: 'red'}}>*</span></CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CInput\n                      type=\"date\"\n                      id=\"date-input\"\n                      name=\"date-input\"\n                      placeholder=\"date\"\n                      value={this.state.dueDate}\n                      valid={this.state.dueDateValid}\n                      invalid={this.state.dueDateInvalid}\n                      onChange={e => this.handleDueDateChange(e)}\n                      min={date}\n                    />\n                    <CValidFeedback>Looks Good!</CValidFeedback>\n                    <CInvalidFeedback>This field is required!</CInvalidFeedback>\n                  </CCol>\n                </CFormGroup>\n\n              </CForm>\n            </CCol>\n          </CCardBody>\n          <CCardFooter>\n\n            <CButton\n              type=\"submit\"\n              size=\"sm\" color=\"primary\" style={{ margin: \"3px\" }}\n              onClick={this.handleSubmit}\n            >\n              {/* <CIcon name=\"cil-scrubber\" /> */}\n              Submit\n            </CButton>\n\n            <CButton\n              type=\"reset\"\n              size=\"sm\" color=\"danger\" style={{ margin: \"3px\" }}\n              onClick={this.handleReset}\n            >\n              {/* <CIcon name=\"cil-ban\" /> */}\n              Reset\n            </CButton>\n\n            <Link to=\"/ticketTable\">\n              <CButton\n                size=\"sm\" color=\"dark\" style={{ margin: \"3px\" }}\n              //href=\"/src/dashboard/Bumanagement#/ticketTable\"\n              >\n                Back\n            </CButton>\n            </Link>\n          </CCardFooter>\n        </CCard>\n      </>\n    )\n  }\n}\n\nexport default withAlert()(BasicForms);"],"sourceRoot":""}