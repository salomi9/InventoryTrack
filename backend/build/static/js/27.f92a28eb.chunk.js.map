{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","views/pages/login/Login.js"],"names":["_unsupportedIterableToArray","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","_arrayLikeToArray","arr","len","length","i","arr2","_slicedToArray","isArray","Symbol","iterator","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","unsupportedIterableToArray","TypeError","withRouter","props","useState","username","setUsername","usernameValid","usernameInvalid","setUsernameInvalid","password","setPassword","passwordValid","passwordInvalid","setPasswordInvalid","className","md","type","placeholder","autoComplete","valid","invalid","onChange","e","target","xs","color","onClick","console","log","history"],"mappings":"6KAAA,+CACe,SAASA,EAA4BC,EAAGC,GACrD,GAAKD,EAAL,CACA,GAAiB,kBAANA,EAAgB,OAAO,YAAiBA,EAAGC,GACtD,IAAIC,EAAIC,OAAOC,UAAUC,SAASC,KAAKN,GAAGO,MAAM,GAAI,GAEpD,MADU,WAANL,GAAkBF,EAAEQ,cAAaN,EAAIF,EAAEQ,YAAYC,MAC7C,QAANP,GAAqB,QAANA,EAAoBQ,MAAMC,KAAKT,GACxC,cAANA,GAAqB,2CAA2CU,KAAKV,GAAW,YAAiBF,EAAGC,QAAxG,K,iCCPa,SAASY,EAAkBC,EAAKC,IAClC,MAAPA,GAAeA,EAAMD,EAAIE,UAAQD,EAAMD,EAAIE,QAE/C,IAAK,IAAIC,EAAI,EAAGC,EAAO,IAAIR,MAAMK,GAAME,EAAIF,EAAKE,IAC9CC,EAAKD,GAAKH,EAAIG,GAGhB,OAAOC,EAPT,mC,gFCIe,SAASC,EAAeL,EAAKG,GAC1C,OCLa,SAAyBH,GACtC,GAAIJ,MAAMU,QAAQN,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKG,GACjD,GAAsB,qBAAXI,QAA4BA,OAAOC,YAAYnB,OAAOW,GAAjE,CACA,IAAIS,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKf,EAAIO,OAAOC,cAAmBE,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKP,SAAWC,GAH8CO,GAAK,IAK9E,MAAOU,GACPT,GAAK,EACLC,EAAKQ,EACL,QACA,IACOV,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBT,EAAKG,IAAM,OAAAkB,EAAA,GAA2BrB,EAAKG,IGLjF,WACb,MAAM,IAAImB,UAAU,6IHIgF,K,+FIqHvFC,uBAtGD,SAACC,GAAW,IAAD,EACSC,mBAAS,IADlB,mBAChBC,EADgB,KACNC,EADM,OAEmBF,oBAAS,GAF5B,mBAEhBG,EAFgB,aAGuBH,oBAAS,IAHhC,mBAGhBI,EAHgB,KAGCC,EAHD,OAKSL,mBAAS,IALlB,mBAKhBM,EALgB,KAKNC,EALM,OAMmBP,oBAAS,GAN5B,mBAMhBQ,EANgB,aAOuBR,oBAAS,IAPhC,mBAOhBS,EAPgB,KAOCC,EAPD,KAoBvB,OACE,yBAAKC,UAAU,sDACb,kBAAC,IAAD,KACE,kBAAC,KAAD,CAAMA,UAAU,0BACd,kBAAC,IAAD,CAAMC,GAAG,KACP,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOD,UAAU,OACf,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,qCACA,uBAAGA,UAAU,cAAb,2BACA,kBAAC,IAAD,CAAaA,UAAU,QACrB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOzC,KAAK,eAGhB,kBAAC,IAAD,CACE2C,KAAK,OACLC,YAAY,WACZC,aAAa,WACbC,MAAOb,EACPc,QAASb,EACTc,SAAY,SAAAC,GAAC,OAAIjB,EAAYiB,EAAEC,OAAO1B,UAGtC,kBAAC,IAAD,gCAEJ,kBAAC,IAAD,CAAaiB,UAAU,QACrB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOzC,KAAK,sBAGhB,kBAAC,IAAD,CACE2C,KAAK,WACLC,YAAY,WACZC,aAAa,mBACbC,MAAOR,EACPS,QAASR,EACTS,SAAY,SAAAC,GAAC,OAAIZ,EAAYY,EAAEC,OAAO1B,UAEtC,kBAAC,IAAD,gCAGJ,kBAAC,KAAD,KACE,kBAAC,IAAD,CAAM2B,GAAG,KACP,kBAAC,IAAD,CACEC,MAAM,UACNX,UAAU,OACVY,QA7DH,WACJ,IAAZtB,GAA8B,IAAZK,GACnBkB,QAAQC,IAAI,WACZ1B,EAAM2B,QAAQjC,KAAK,mBAGjBiB,GAAmB,GACnBL,GAAmB,MAmDH,UAQF,kBAAC,IAAD,CAAMgB,GAAG,IAAIV,UAAU,cACrB,kBAAC,IAAD,CAASW,MAAM,OAAOX,UAAU,QAAhC","file":"static/js/27.f92a28eb.chunk.js","sourcesContent":["import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useState } from 'react'\nimport { Link, Route, withRouter } from 'react-router-dom'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CCol,\n  CContainer,\n  CForm,\n  CInput,\n  CInputGroup,\n  CInputGroupPrepend,\n  CInputGroupText,\n  CRow,\n  CValidFeedback,\n  CInvalidFeedback\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\n\nconst Login = (props) => {\n  const [username, setUsername] = useState(\"\");\n  const [usernameValid, setUsernameValid] = useState(false);\n  const [usernameInvalid, setUsernameInvalid] = useState(false);\n\n  const [password, setPassword] = useState(\"\");\n  const [passwordValid, setPasswordValid] = useState(false);\n  const [passwordInvalid, setPasswordInvalid] = useState(false);\n\n  const handleSubmit = () => {\n    if(username != \"\" && password != \"\"){\n      console.log(\"in here\");\n      props.history.push('/ticketTable/');\n    }\n    else{\n        setPasswordInvalid(true);\n        setUsernameInvalid(true);\n    }\n  }\n\n  return (\n    <div className=\"c-app c-default-layout flex-row align-items-center\">\n      <CContainer>\n        <CRow className=\"justify-content-center\">\n          <CCol md=\"5\">\n            <CCardGroup>\n              <CCard className=\"p-4\">\n                <CCardBody>\n                  <CForm>\n                    <h1>Login</h1>\n                    <p className=\"text-muted\">Sign In to your account</p>\n                    <CInputGroup className=\"mb-3\">\n                      <CInputGroupPrepend>\n                        <CInputGroupText>\n                          <CIcon name=\"cil-user\" />\n                        </CInputGroupText>\n                      </CInputGroupPrepend>\n                      <CInput \n                        type=\"text\" \n                        placeholder=\"Username\" \n                        autoComplete=\"username\"\n                        valid={usernameValid}\n                        invalid={usernameInvalid}\n                        onChange = {e => setUsername(e.target.value)}\n                        />\n                        {/* <CValidFeedback></CValidFeedback> */}\n                        <CInvalidFeedback>This field is required</CInvalidFeedback>\n                    </CInputGroup>\n                    <CInputGroup className=\"mb-4\">\n                      <CInputGroupPrepend>\n                        <CInputGroupText>\n                          <CIcon name=\"cil-lock-locked\" />\n                        </CInputGroupText>\n                      </CInputGroupPrepend>\n                      <CInput \n                        type=\"password\" \n                        placeholder=\"Password\" \n                        autoComplete=\"current-password\" \n                        valid={passwordValid}\n                        invalid={passwordInvalid}\n                        onChange = {e => setPassword(e.target.value)}                        \n                        />\n                        <CInvalidFeedback>This field is required</CInvalidFeedback>\n\n                    </CInputGroup>\n                    <CRow>\n                      <CCol xs=\"6\">\n                        <CButton \n                          color=\"primary\" \n                          className=\"px-4\"\n                          onClick={handleSubmit}\n                          >\n                            Login\n                        </CButton>\n                      </CCol>\n                      <CCol xs=\"6\" className=\"text-right\">\n                        <CButton color=\"link\" className=\"px-0\">Forgot password?</CButton>\n                      </CCol>\n                    </CRow>\n                  </CForm>\n                </CCardBody>\n              </CCard>\n              {/* <CCard className=\"text-white bg-primary py-5 d-md-down-none\" style={{ width: '44%' }}>\n                <CCardBody className=\"text-center\">\n                  <div>\n                    <h2>Sign up</h2>\n                    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut\n                      labore et dolore magna aliqua.</p>\n                    <Link to=\"/register\">\n                      <CButton color=\"primary\" className=\"mt-3\" active tabIndex={-1}>Register Now!</CButton>\n                    </Link>\n                  </div>\n                </CCardBody>\n              </CCard> */}\n            </CCardGroup>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  )\n}\n\nexport default withRouter(Login);\n"],"sourceRoot":""}