{"version":3,"sources":["contant/custom.js","dashboard/Forms/TmForm.js"],"names":["WEB_URL","date","Date","toISOString","substr","BasicForms","state","ticketNo","undefined","props","location","res","actionTaken","actionInvalid","actionValid","reasonForDelay","delayReason","reasonInvalid","reasonValid","remarks","remarkInvalid","remarkValid","closingDate","moment","format","dateInvalid","dateValid","modeOfSupport","modeOfSupportInvalid","modeOfSupportValid","modeOfSupportArr","handleActionChange","e","console","log","target","value","setState","handleDelayChange","handleRemarksChange","handleClosingDateChange","submitForm","alert","param","parseInt","userType","dataRequest","then","data","message","show","catch","error","handleReset","handleModeOfSupport","fetchDropDowns","fetch","response","json","Array","isArray","err","this","URL","params","method","headers","body","JSON","stringify","status","history","push","map","index","key","style","height","overflowY","xs","action","encType","className","row","md","htmlFor","id","name","disabled","placeholder","color","custom","valid","invalid","onChange","rows","type","min","size","margin","onClick","to","React","Component","withAlert"],"mappings":"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","file":"static/js/34.edc14d00.chunk.js","sourcesContent":["//For Development with react - local db\n// const WEB_URL = \"http://127.0.0.1:5050\" \n\n//For deployment with node - Compile EXE\nconst WEB_URL = \"\"\nexport default WEB_URL;","import React from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CForm,\n  CFormGroup,\n  CFormText,\n  CValidFeedback,\n  CInvalidFeedback,\n  CTextarea,\n  CInput,\n  CLabel, CSelect\n} from '@coreui/react';\nimport WEB_URL from '../../contant/custom';\nimport CIcon from '@coreui/icons-react'\nimport moment from 'moment';\nimport { withAlert } from 'react-alert';\nimport { Link } from 'react-router-dom';\n\n\nvar curr = new Date();\nvar date = curr.toISOString().substr(0, 10);\nclass BasicForms extends React.Component {\n  state = {\n    ticketNo: this.props.location.res == (null || undefined) ? \"\" : this.props.location.res.ticketNo,\n\n    actionTaken: this.props.location.res == (null || undefined) ? \"\" : this.props.location.res.actionTaken,\n    actionInvalid: false,\n    actionValid: false,\n\n    reasonForDelay: this.props.location.res == (null || undefined) ? \"\" : this.props.location.res.delayReason,\n    reasonInvalid: false,\n    reasonValid: false,\n\n    remarks: this.props.location.res == (null || undefined) ? \"\" : this.props.location.res.remarks,\n    remarkInvalid: false,\n    remarkValid: false,\n\n    closingDate: this.props.location.res == (null || undefined) ? \"\" : moment(this.props.location.res.closingDate).format('YYYY-MM-DD'),\n    dateInvalid: false,\n    dateValid: false,\n\n    modeOfSupport: this.props.location.res == (null || undefined) ? \"\" : this.props.location.res.modeOfSupport,\n    modeOfSupportInvalid: false,\n    modeOfSupportValid: false,\n    modeOfSupportArr: []\n  }\n\n  componentDidMount() {\n    this.fetchDropDowns();\n  }\n\n\n  /*Api Calls*/\n  dataRequest(URL, params) {\n    return fetch(WEB_URL + URL, {\n      method: 'POST',\n      'credentials': 'include',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(params)\n    })\n      .then(data => {\n        if (data.status == 401) {\n          this.props.history.push('/login');\n        }\n        else if (data.status == 403) {\n          this.props.history.push('/login');\n        }\n        return data.json()\n      })\n      .catch(err => {\n        console.log(\"chartErr\", err)\n        return err\n      })\n  }\n\n  handleActionChange = (e) => {\n    console.log(\"Action on change\", e.target.value, typeof (e.target.value))\n    if (e.target.value !== \"\") {\n      this.setState({\n        actionTaken: e.target.value,\n        actionValid: true,\n        actionInvalid: false\n      })\n    }\n    else {\n      this.setState({\n        actionTaken: e.target.value,\n        actionInvalid: true,\n        actionValid: false\n      })\n    }\n  }\n\n  handleDelayChange = (e) => {\n    if (e.target.value != (\"\" && undefined)) {\n      this.setState({\n        reasonForDelay: e.target.value,\n        reasonValid: true,\n        reasonInvalid: false\n      })\n    }\n    else {\n      this.setState({\n        reasonForDelay: e.target.value,\n        reasonValid: false,\n        reasonInvalid: true\n      })\n    }\n  }\n\n  handleRemarksChange = (e) => {\n    if (e.target.value != (\"\" && undefined)) {\n      this.setState({\n        remarks: e.target.value,\n        remarkValid: true,\n        remarkInvalid: false\n      })\n    }\n    else {\n      this.setState({\n        remarks: e.target.value,\n        remarkValid: false,\n        remarkInvalid: true\n      })\n    }\n  }\n\n  handleClosingDateChange = (e) => {\n    // console.log(\"due date\", e.target.value)\n    if (e.target.value !== (\"\" && undefined)) {\n      this.setState({\n        closingDate: e.target.value,\n        dateInvalid: false,\n        dateValid: true\n      })\n    }\n    else {\n      // console.log(\"inside else\")\n      this.setState({\n        dateInvalid: true,\n        dateValid: false\n      })\n    }\n  }\n\n  submitForm = () => {\n    const alert = this.props.alert;\n\n    if (\n      // this.state.ticketNo != (\"\" || undefined) &&\n      // this.state.actionTaken != (\"\" || undefined)\n      // && this.state.reasonForDelay != (\"\" || undefined)\n      // && this.state.remarks != (\"\" || undefined) \n      // && this.state.closingDate != (\"\" || undefined)\n\n      this.state.ticketNo != null && this.state.ticketNo != undefined && this.state.ticketNo != \"\" &&\n      this.state.modeOfSupport != null && this.state.modeOfSupport != undefined && this.state.modeOfSupport != \"\" &&\n      this.state.actionTaken != null && this.state.actionTaken != undefined && this.state.actionTaken != \"\" \n      // this.state.delayReason != null && this.state.delayReason != undefined && this.state.delayReason != \"\" &&\n      // this.state.remarks != null && this.state.remarks != undefined && this.state.remarks != \"\" &&\n      // this.state.closingDate != null && this.state.closingDate != undefined && this.state.closingDate != \"\" \n\n    ) {\n      const param = {};\n      param.ticketNo = parseInt(this.state.ticketNo);\n      param.actionTaken = this.state.actionTaken;\n      param.delayReason = this.state.reasonForDelay;\n      param.remarks = this.state.remarks;\n      param.closingDate = this.state.closingDate;\n      param.userType = \"Team Member\";\n      param.modeOfSupport = this.state.modeOfSupport;\n\n      console.log(\"TM Form\", param)\n      console.log(\"Action Taken\",param.actionTaken, typeof(param.actionTaken))\n\n      this.dataRequest('/ticket/editTicket', param)\n        .then(data => {\n          if (data.message != undefined) {\n            alert.show(data.message);\n          }\n          else {\n            alert.show(\"Internal Server Error !\")\n          }\n        })\n        .catch(error => {\n          console.log(\"inside TMForm\", error)\n        })\n    }\n    else {\n      alert.show(\"Please fill all the required fields\")\n    }\n\n  }\n\n  handleReset = () => {\n    this.setState({\n      // actionTaken: \"\",\n      // actionValid: false,\n      // actionInvalid: false,\n      // reasonForDelay: \"\",\n      // remarks: \"\",\n\n      modeOfSupport: \"\",\n      modeOfSupportInvalid: false,\n      modeOfSupportValid: false,\n\n      actionTaken: \"\",\n      actionValid: false,\n      actionInvalid: false,\n\n      reasonForDelay: \"\",\n      reasonValid: false,\n      reasonInvalid: false,\n\n      remarks: \"\",\n      remarkValid: false,\n      remarkInvalid: false,\n\n      closingDate: \"\",\n      dateValid: false,\n      dateInvalid: false\n    })\n  }\n\n  handleModeOfSupport = (e) => {\n    console.log(\"sdv\", e.target.value)\n    if (e.target.value != \"\" && e.target.value != \"Please Select Mode\") {\n      this.setState({\n        modeOfSupport: e.target.value,\n        modeOfSupportValid: true,\n        modeOfSupportInvalid: false\n      })\n    }\n    else {\n      this.setState({\n        // modeOfSupport: \"\",\n        modeOfSupportValid: false,\n        modeOfSupportInvalid: true\n      })\n    }\n  }\n\n  fetchDropDowns = () => {\n\n    fetch(WEB_URL + \"/types/ms\")\n      .then(response => response.json())\n      .then(data => {\n        if ((data != null || data != undefined) && Array.isArray(data.data)) {\n          this.setState({\n            modeOfSupportArr: data.data\n          })\n        }\n      })\n      .catch(err => {\n        return err;\n      })\n\n  }\n  render() {\n\n    let modeOfSupport = this.state.modeOfSupportArr;\n    let modeOfSupportArr = modeOfSupport.map((res, index) =>\n      <option key={index} value={res}>{res}</option>\n    )\n\n\n    return (\n      <>\n        <CCard style={{ height: \"78vh\" }}>\n          <CCardHeader>\n            Edit Ticket Form\n          </CCardHeader>\n          <CCardBody style={{ overflowY: \"scroll\" }}>\n            <CCol xs=\"3\">\n\n            </CCol>\n            <CCol xs=\"7\">\n              <CForm action=\"\" method=\"post\" encType=\"multipart/form-data\" className=\"form-horizontal\">\n\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"text-input\">Ticket No:</CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CInput\n                      id=\"text-input\"\n                      name=\"text-input\"\n                      disabled\n                      value={this.state.ticketNo}\n                      placeholder=\"Text\"\n                    />\n                    <CFormText>You can not edit this</CFormText>\n                  </CCol>\n                </CFormGroup>\n\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"select\">Mode Of Support<span style={{ color: 'red' }}>*</span></CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CSelect\n                      custom\n                      name=\"select\"\n                      id=\"select\"\n                      value={this.state.modeOfSupport}\n                      valid={this.state.modeOfSupportValid}\n                      invalid={this.state.modeOfSupportInvalid}\n                      onChange={e => this.handleModeOfSupport(e)}\n                    >\n                      {/* <option>Please Select Mode</option> */}\n                      <option >{this.state.modeOfSupport != \"\" ? this.state.modeOfSupport : \"Please select Mode\"}</option>\n                      {modeOfSupportArr}\n                      {/* <option>1</option>\n                      <option>2</option>\n                      <option>3</option>\n                      <option>4</option>\n                      <option>5</option>\n                      <option>6</option> */}\n                    </CSelect>\n                    <CValidFeedback>Looks Good!</CValidFeedback>\n                    <CInvalidFeedback>This field is required!</CInvalidFeedback>\n                  </CCol>\n                </CFormGroup>\n\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"textarea-input\">Action Taken<span style={{ color: 'red' }}>*</span></CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CTextarea\n                      name=\"textarea-input\"\n                      id=\"textarea-input\"\n                      rows=\"9\"\n                      placeholder=\"Enter Action Taken...\"\n                      value={this.state.actionTaken}\n                      valid={this.state.actionValid}\n                      invalid={this.state.actionInvalid}\n                      onChange={(e) => this.handleActionChange(e)}\n                    />\n                    <CValidFeedback>Looks Good!</CValidFeedback>\n                    <CInvalidFeedback>This field is required!</CInvalidFeedback>\n                  </CCol>\n                </CFormGroup>\n\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"textarea-input\">Reason For Delay</CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CTextarea\n                      name=\"textarea-input\"\n                      id=\"textarea-input\"\n                      rows=\"9\"\n                      placeholder=\"Enter Reason For Delay...\"\n                      value={this.state.reasonForDelay}\n                      valid={this.state.reasonValid}\n                      invalid={this.state.reasonInvalid}\n                      // onChange={e => this.setState({ reasonForDelay: e.target.value })}\n                      onChange={e => this.handleDelayChange(e)}\n                    />\n                  </CCol>\n                </CFormGroup>\n\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"textarea-input\">Remarks</CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CTextarea\n                      name=\"textarea-input\"\n                      id=\"textarea-input\"\n                      rows=\"9\"\n                      placeholder=\"Enter Remarks...\"\n                      value={this.state.remarks}\n                      valid={this.state.remarkValid}\n                      invalid={this.state.remarkInvalid}\n                      // onChange={e => this.setState({ remarks: e.target.value })}\n                      onChange={e => this.handleRemarksChange(e)}\n                    />\n                  </CCol>\n                </CFormGroup>\n\n\n\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"date-input\">Closing Date</CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CInput\n                      type=\"date\"\n                      id=\"date-input\"\n                      name=\"date-input\"\n                      placeholder=\"date\"\n                      min={date}\n                      // value={this.state.closingDate}\n                      // onChange={e => this.setState({ closingDate: e.target.value })}\n                      value={this.state.closingDate}\n                      valid={this.state.dateValid}\n                      invalid={this.state.dateInvalid}\n                      onChange={e => this.handleClosingDateChange(e)}\n                    />\n                  </CCol>\n                </CFormGroup>\n\n\n              </CForm>\n\n            </CCol>\n\n          </CCardBody>\n          <CCardFooter>\n\n            <CButton\n              type=\"submit\"\n              size=\"sm\"\n              color=\"primary\"\n              style={{ margin: \"3px\" }}\n              onClick={this.submitForm}\n            >\n              {/* <CIcon name=\"cil-scrubber\" /> */}\n                 Submit\n            </CButton>\n\n            <CButton\n              type=\"reset\"\n              size=\"sm\"\n              color=\"danger\"\n              style={{ margin: \"3px\" }}\n              onClick={this.handleReset}\n            >\n              {/* <CIcon name=\"cil-ban\" />  */}\n                  Reset\n            </CButton>\n\n            <Link to=\"/ticketTable\">\n              <CButton\n                size=\"sm\" color=\"dark\" style={{ margin: \"3px\" }}\n              // href=\"/ticketTable\"\n              >\n                Back\n            </CButton>\n            </Link>\n\n          </CCardFooter>\n        </CCard>\n      </>\n    )\n  }\n\n}\n\nexport default withAlert()(BasicForms);\n"],"sourceRoot":""}