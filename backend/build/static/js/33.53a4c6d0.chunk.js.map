{"version":3,"sources":["contant/custom.js","dashboard/BuManagement/BuManagement.js"],"names":["WEB_URL","columns","name","field","options","download","downloadOptions","filename","filterType","selectableRows","responsive","rowsPerPage","filter","print","viewColumns","rowsPerPageOptions","customToolbar","to","pathname","color","BuManagement","state","rowData","fetchBu","e","fetch","then","response","json","data","modifiedData","undefined","Array","isArray","map","res","push","BUName","BURPName","setState","catch","err","this","URL","params","method","headers","body","JSON","stringify","status","props","history","title","React","Component"],"mappings":"6KAKeA,IADC,I,6ICEVC,EAAU,CACZ,CACIC,KAAM,qBACNC,MAAO,UAGX,CACID,KAAM,qBACNC,MAAO,UAEX,CACID,KAAM,UACNC,MAAO,UACPC,QAAS,CACLC,UAAU,KAUhBD,EAAU,CACZE,gBAAiB,CAAEC,SAAU,mBAC7BC,WAAY,WACZC,gBAAgB,EAChBC,WAAY,SACZC,YAAa,EACbC,QAAQ,EACRC,OAAO,EACPC,aAAa,EACbC,oBAAoB,EACpBC,cAAe,kBAAM,kBAAC,IAAD,CAAMC,GAAI,CAC3BC,SAAU,eACX,kBAAC,IAAD,CAASC,MAAM,WAAf,UAKDC,E,4MACFC,MAAQ,CACJC,QAAS,I,EAgCbC,QAAU,SAACC,GACPC,MAAMzB,IAAU,aACX0B,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACF,IAAIC,EAAe,GACP,MAARD,QAAwBE,GAARF,GAAqBG,MAAMC,QAAQJ,EAAKA,OACxDA,EAAKA,KAAKK,KAAI,SAAAC,GACVL,EAAaM,KAAK,CACd,OAAUD,EAAIE,OACd,OAAUF,EAAIG,SAAWH,EAAIG,SAAW,oBACxC,QAAW,kBAAC,IAAD,CACKrB,GAAI,CACAC,SAAU,cACViB,QAGP,kBAAC,IAAD,CAAShB,MAAM,WAAf,cAMrB,EAAKoB,SAAS,CACVjB,QAASQ,KAIb,EAAKS,SAAS,CACVjB,QAAS,QAIpBkB,OAAM,SAAAC,Q,kEA5DXC,KAAKnB,Y,kCAIGoB,EAAKC,GAAS,IAAD,OACrB,OAAOnB,MAAMzB,IAAU2C,EAAK,CACxBE,OAAQ,OACR,YAAe,UACfC,QAAS,CACL,OAAU,mBACV,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUL,KAEpBlB,MAAK,SAAAG,GAOF,OANmB,KAAfA,EAAKqB,QAGe,KAAfrB,EAAKqB,SAFV,EAAKC,MAAMC,QAAQhB,KAAK,UAKrBP,EAAKD,UAEfY,OAAM,SAAAC,GACH,OAAOA,O,+BA2Cf,OAEI,kBAAC,IAAD,CAEIY,MAAO,2BACPxB,KAAMa,KAAKrB,MAAMC,QACjBrB,QAASA,EACTG,QAASA,Q,GAhFEkD,IAAMC,WAuFlBnC","file":"static/js/33.53a4c6d0.chunk.js","sourcesContent":["//For Development with react - local db\n// const WEB_URL = \"http://127.0.0.1:5050\" \n\n//For deployment with node - Compile EXE\nconst WEB_URL = \"\"\nexport default WEB_URL;","import React from \"react\";\nimport MaterialDatatable from \"material-datatable\";\nimport { CBadge, CButton } from '@coreui/react';\nimport { Link } from 'react-router-dom';\nimport WEB_URL from '../../contant/custom';\n\nconst columns = [\n    {\n        name: 'Business Unit Name',\n        field: 'BUName',\n\n    },\n    {\n        name: 'Business Unit Lead',\n        field: 'BULead'\n    }, \n    {\n        name: \"Actions\",\n        field: 'actions',\n        options: {\n            download: false\n        }\n    }\n];\nconst data = [\n    // { name: \"Veeeeery loooooooooong naaaaaaaaaaame\", title: \"Title 1\", action: <Link><CButton color=\"primary\">Edit</CButton></Link> },\n    // { name: \"Name 2\", title: \"Title 2\", action: <Link><CButton color=\"primary\">Edit</CButton></Link> },\n\n];\n\nconst options = {\n    downloadOptions: { filename: \"BUTableData.csv\"},\n    filterType: 'checkbox',\n    selectableRows: false,\n    responsive: 'scroll',\n    rowsPerPage: 5,\n    filter: false,\n    print: false,\n    viewColumns: false,\n    rowsPerPageOptions: false,\n    customToolbar: () => <Link to={{\n        pathname: '/buAddForm',\n    }}><CButton color=\"primary\">Add</CButton></Link>\n\n\n};\n\nclass BuManagement extends React.Component {\n    state = {\n        rowData: []\n    }\n\n    componentDidMount() {\n        this.fetchBu();\n    }\n\n    /*Api Calls*/\n    dataRequest(URL, params) {\n        return fetch(WEB_URL + URL, {\n            method: 'POST',\n            'credentials': 'include',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(params)\n        })\n            .then(data => {\n                if (data.status == 401) {\n                    this.props.history.push('/login');\n                }\n                else if (data.status == 403) {\n                    this.props.history.push('/login');\n                }\n                return data.json();\n            })\n            .catch(err => {\n                return err;\n            })\n    }\n\n    fetchBu = (e) => {\n        fetch(WEB_URL + \"/bu/fetch\")\n            .then(response => response.json())\n            .then(data => {\n                let modifiedData = []\n                if (data != null || data != undefined && Array.isArray(data.data)) {\n                    data.data.map(res => {\n                        modifiedData.push({\n                            \"BUName\": res.BUName,\n                            \"BULead\": res.BURPName ? res.BURPName : \"Lead not assigned\",\n                            \"actions\": <Link\n                                            to={{\n                                                pathname: '/buEditForm',\n                                                res\n                                            }}>\n                                        \n                                         <CButton color=\"primary\">\n                                            Edit\n                                         </CButton>\n                            </Link>\n                        })\n                    })\n                    this.setState({\n                        rowData: modifiedData\n                    })\n                }\n                else{\n                    this.setState({\n                        rowData: []\n                    })\n                }\n            })\n            .catch(err => {\n\n            })\n    }\n\n\n    render() {\n        return (\n\n            <MaterialDatatable\n\n                title={\"Business Unit Management\"}\n                data={this.state.rowData}\n                columns={columns}\n                options={options}\n            />\n\n        )\n    }\n}\n\nexport default BuManagement;\n"],"sourceRoot":""}